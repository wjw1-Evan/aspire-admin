---
globs: Platform.ServiceDefaults/**/*.cs,Platform.ApiService/**/*.cs
description: 数据工厂自动审计与时间戳规范 - 禁止手动 SetCurrentTimestamp/SetOperationTracking
---
# 数据工厂自动审计与时间戳规范

本规则规范在服务层/控制器中如何使用 `IDatabaseOperationFactory<T>`，避免手动设置时间戳与操作者信息，统一由工厂自动完成。

## 工厂自动注入内容

在以下操作中由工厂自动设置：

- 创建：
  - `CreatedAt`、`UpdatedAt`
  - `CreatedBy`、`CreatedByUsername`

- 更新：
  - `UpdatedAt`
  - `UpdatedBy`、`UpdatedByUsername`

- 软删除：
  - `IsDeleted=true`
  - `DeletedAt`、`DeletedBy`
  - `UpdatedAt`

涉及方法（含带租户/不带租户版本）：
- `CreateAsync`、`CreateManyAsync`
- `FindOneAndReplace*`、`FindOneAndUpdate*`
- `UpdateManyAsync`、`FindOneAndSoftDelete*`、`SoftDeleteManyAsync`

实现参考：
- [Platform.ServiceDefaults/Services/DatabaseOperationFactory.cs](mdc:Platform.ServiceDefaults/Services/DatabaseOperationFactory.cs)

## 禁止的手动代码（应移除）

- `updateBuilder.SetCurrentTimestamp()`
- 任何手动 `Set(u => u.UpdatedAt, ...)` 或 `Set(u => u.DeletedAt, ...)` 的重复设置
- 任何手动 `SetOperationTracking(...)`（更新人/创建人由工厂自动设置）

示例（应重构）：
```csharp
// 之前（冗余）
var update = _factory.CreateUpdateBuilder()
    .Set(x => x.IsActive, true)
    .SetCurrentTimestamp() // ❌ 冗余
    .Build();

// 之后（精简）
var update = _factory.CreateUpdateBuilder()
    .Set(x => x.IsActive, true)
    .Build();
```

## 说明

- 工厂内部已统一从上下文解析当前用户与用户名并自动写入。
- 统一行为可避免多处手写逻辑不一致，确保审计数据完整可靠。

## 兼容注意

- 如确需覆盖自动行为（极少数场景），应在业务侧明确注释理由，并评估对审计一致性的影响。
