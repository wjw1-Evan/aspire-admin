{
  "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
  "pkg": {
    "name": "ant-design-pro",
    "version": "6.0.0",
    "private": true,
    "description": "An out-of-box UI solution for enterprise applications",
    "repository": "git@github.com:ant-design/ant-design-pro.git",
    "scripts": {
      "analyze": "cross-env ANALYZE=1 max build",
      "biome:lint": "npx @biomejs/biome lint",
      "build": "max build",
      "deploy": "npm run build && npm run gh-pages",
      "dev": "npm run start:dev",
      "gh-pages": "gh-pages -d dist",
      "i18n-remove": "pro i18n-remove --locale=zh-CN --write",
      "postinstall": "max setup",
      "jest": "jest",
      "lint": "npm run biome:lint && npm run tsc",
      "lint-staged": "lint-staged",
      "openapi": "max openapi",
      "prepare": "husky",
      "preview": "npm run build && max preview --port 8000",
      "record": "cross-env NODE_ENV=development REACT_APP_ENV=test max record --scene=login",
      "serve": "umi-serve",
      "start": "cross-env MOCK=none UMI_ENV=dev max dev",
      "start:dev": "cross-env REACT_APP_ENV=dev MOCK=none UMI_ENV=dev max dev",
      "start:no-mock": "cross-env MOCK=none UMI_ENV=dev max dev",
      "start:pre": "cross-env REACT_APP_ENV=pre UMI_ENV=dev max dev",
      "start:test": "cross-env REACT_APP_ENV=test MOCK=none UMI_ENV=dev max dev",
      "test": "jest",
      "test:coverage": "npm run jest -- --coverage",
      "test:update": "npm run jest -- -u",
      "tsc": "tsc --noEmit"
    },
    "browserslist": [
      "defaults"
    ],
    "dependencies": {
      "@ant-design/icons": "^6.1.0",
      "@ant-design/pro-components": "^2.7.19",
      "@ant-design/v5-patch-for-react-19": "^1.0.3",
      "antd": "^5.25.4",
      "antd-style": "^3.7.0",
      "classnames": "^2.5.1",
      "dayjs": "^1.11.13",
      "react": "^19.1.0",
      "react-dom": "^19.1.0"
    },
    "devDependencies": {
      "@ant-design/pro-cli": "^3.3.0",
      "@biomejs/biome": "^2.0.6",
      "@commitlint/cli": "^20.1.0",
      "@commitlint/config-conventional": "^20.0.0",
      "@testing-library/dom": "^10.4.0",
      "@testing-library/react": "^16.0.1",
      "@types/express": "^5.0.3",
      "@types/jest": "^30.0.0",
      "@types/lodash": "^4.17.10",
      "@types/node": "^24.0.10",
      "@types/react": "^19.1.5",
      "@types/react-dom": "^19.1.5",
      "@types/react-helmet": "^6.1.11",
      "@umijs/max": "^4.3.24",
      "cross-env": "^10.1.0",
      "express": "^5.1.0",
      "gh-pages": "^6.1.1",
      "husky": "^9.1.7",
      "jest": "^30.0.4",
      "jest-environment-jsdom": "^30.2.0",
      "lint-staged": "^16.1.2",
      "mockjs": "^1.1.0",
      "ts-node": "^10.9.2",
      "typescript": "^5.6.3",
      "umi-presets-pro": "^2.0.3",
      "umi-serve": "^1.9.11"
    },
    "engines": {
      "node": ">=20.0.0"
    }
  },
  "pkgPath": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/package.json",
  "plugins": {
    "./node_modules/@umijs/core/dist/service/servicePlugin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "preset",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/core/dist/service/servicePlugin.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/core/dist/service/servicePlugin",
      "key": "servicePlugin"
    },
    "@umijs/preset-umi": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 12
      },
      "enableBy": "register",
      "type": "preset",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/index.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "@umijs/preset-umi",
      "key": "umi"
    },
    "./node_modules/@umijs/max/dist/preset": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "enableBy": "register",
      "type": "preset",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/max/dist/preset.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/max/dist/preset",
      "key": "preset"
    },
    "umi-presets-pro": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            1
          ]
        },
        "register": 4
      },
      "enableBy": "register",
      "type": "preset",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/umi-presets-pro/dist/index.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "umi-presets-pro",
      "key": "umiPresetsPro"
    },
    "./node_modules/@umijs/preset-umi/dist/registerMethods": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            0
          ]
        },
        "register": 4
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/registerMethods.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/registerMethods",
      "key": "registerMethods"
    },
    "@umijs/did-you-know": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            2
          ]
        },
        "register": 3
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/did-you-know/dist/plugin.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "@umijs/did-you-know",
      "key": "umijsDidYouKnow"
    },
    "./node_modules/@umijs/preset-umi/dist/features/404/404": {
      "config": {},
      "time": {
        "hooks": {
          "modifyRoutes": [
            0
          ]
        },
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/404/404.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/404/404",
      "key": "404"
    },
    "./node_modules/@umijs/preset-umi/dist/features/aiDev/aiDev": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/aiDev/aiDev.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/aiDev/aiDev",
      "key": "aiDev"
    },
    "./node_modules/@umijs/preset-umi/dist/features/appData/appData": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            119
          ]
        },
        "register": 26
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/appData/appData.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/appData/appData",
      "key": "appData"
    },
    "./node_modules/@umijs/preset-umi/dist/features/appData/umiInfo": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/appData/umiInfo.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/appData/umiInfo",
      "key": "umiInfo"
    },
    "./node_modules/@umijs/preset-umi/dist/features/check/check": {
      "config": {},
      "time": {
        "hooks": {
          "onCheckConfig": [
            0
          ],
          "onCheck": [
            0
          ]
        },
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/check/check.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/check/check",
      "key": "check"
    },
    "./node_modules/@umijs/preset-umi/dist/features/check/babel722": {
      "config": {},
      "time": {
        "hooks": {
          "onCheck": [
            0
          ]
        },
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/check/babel722.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/check/babel722",
      "key": "babel722"
    },
    "./node_modules/@umijs/preset-umi/dist/features/codeSplitting/codeSplitting": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/codeSplitting/codeSplitting.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/codeSplitting/codeSplitting",
      "key": "codeSplitting"
    },
    "./node_modules/@umijs/preset-umi/dist/features/configPlugins/configPlugins": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ]
        },
        "register": 10
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/configPlugins/configPlugins.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/configPlugins/configPlugins",
      "key": "configPlugins"
    },
    "virtual: config-title": {
      "id": "virtual: config-title",
      "key": "title",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-styles": {
      "id": "virtual: config-styles",
      "key": "styles",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-scripts": {
      "id": "virtual: config-scripts",
      "key": "scripts",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-routes": {
      "id": "virtual: config-routes",
      "key": "routes",
      "config": {
        "onChange": "regenerateTmpFiles"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-routeLoader": {
      "id": "virtual: config-routeLoader",
      "key": "routeLoader",
      "config": {
        "default": {
          "moduleType": "esm"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-reactRouter5Compat": {
      "id": "virtual: config-reactRouter5Compat",
      "key": "reactRouter5Compat",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-presets": {
      "id": "virtual: config-presets",
      "key": "presets",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-plugins": {
      "id": "virtual: config-plugins",
      "key": "plugins",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-npmClient": {
      "id": "virtual: config-npmClient",
      "key": "npmClient",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-mountElementId": {
      "id": "virtual: config-mountElementId",
      "key": "mountElementId",
      "config": {
        "default": "root"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-metas": {
      "id": "virtual: config-metas",
      "key": "metas",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-links": {
      "id": "virtual: config-links",
      "key": "links",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-historyWithQuery": {
      "id": "virtual: config-historyWithQuery",
      "key": "historyWithQuery",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-history": {
      "id": "virtual: config-history",
      "key": "history",
      "config": {
        "default": {
          "type": "browser"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-headScripts": {
      "id": "virtual: config-headScripts",
      "key": "headScripts",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-esbuildMinifyIIFE": {
      "id": "virtual: config-esbuildMinifyIIFE",
      "key": "esbuildMinifyIIFE",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-conventionRoutes": {
      "id": "virtual: config-conventionRoutes",
      "key": "conventionRoutes",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-conventionLayout": {
      "id": "virtual: config-conventionLayout",
      "key": "conventionLayout",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-base": {
      "id": "virtual: config-base",
      "key": "base",
      "config": {
        "default": "/"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-analyze": {
      "id": "virtual: config-analyze",
      "key": "analyze",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-writeToDisk": {
      "id": "virtual: config-writeToDisk",
      "key": "writeToDisk",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-transformRuntime": {
      "id": "virtual: config-transformRuntime",
      "key": "transformRuntime",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-theme": {
      "id": "virtual: config-theme",
      "key": "theme",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-targets": {
      "id": "virtual: config-targets",
      "key": "targets",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-svgr": {
      "id": "virtual: config-svgr",
      "key": "svgr",
      "config": {
        "default": {}
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-svgo": {
      "id": "virtual: config-svgo",
      "key": "svgo",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-stylusLoader": {
      "id": "virtual: config-stylusLoader",
      "key": "stylusLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-styleLoader": {
      "id": "virtual: config-styleLoader",
      "key": "styleLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-srcTranspilerOptions": {
      "id": "virtual: config-srcTranspilerOptions",
      "key": "srcTranspilerOptions",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-srcTranspiler": {
      "id": "virtual: config-srcTranspiler",
      "key": "srcTranspiler",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-sassLoader": {
      "id": "virtual: config-sassLoader",
      "key": "sassLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-runtimePublicPath": {
      "id": "virtual: config-runtimePublicPath",
      "key": "runtimePublicPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-purgeCSS": {
      "id": "virtual: config-purgeCSS",
      "key": "purgeCSS",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-publicPath": {
      "id": "virtual: config-publicPath",
      "key": "publicPath",
      "config": {
        "default": "/"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-proxy": {
      "id": "virtual: config-proxy",
      "key": "proxy",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-postcssLoader": {
      "id": "virtual: config-postcssLoader",
      "key": "postcssLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-outputPath": {
      "id": "virtual: config-outputPath",
      "key": "outputPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-normalCSSLoaderModules": {
      "id": "virtual: config-normalCSSLoaderModules",
      "key": "normalCSSLoaderModules",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-mfsu": {
      "id": "virtual: config-mfsu",
      "key": "mfsu",
      "config": {
        "default": {
          "strategy": "eager"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-mdx": {
      "id": "virtual: config-mdx",
      "key": "mdx",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-manifest": {
      "id": "virtual: config-manifest",
      "key": "manifest",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-lessLoader": {
      "id": "virtual: config-lessLoader",
      "key": "lessLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-jsMinifierOptions": {
      "id": "virtual: config-jsMinifierOptions",
      "key": "jsMinifierOptions",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-jsMinifier": {
      "id": "virtual: config-jsMinifier",
      "key": "jsMinifier",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-inlineLimit": {
      "id": "virtual: config-inlineLimit",
      "key": "inlineLimit",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-ignoreMomentLocale": {
      "id": "virtual: config-ignoreMomentLocale",
      "key": "ignoreMomentLocale",
      "config": {
        "default": true
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-https": {
      "id": "virtual: config-https",
      "key": "https",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-hash": {
      "id": "virtual: config-hash",
      "key": "hash",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-forkTSChecker": {
      "id": "virtual: config-forkTSChecker",
      "key": "forkTSChecker",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-fastRefresh": {
      "id": "virtual: config-fastRefresh",
      "key": "fastRefresh",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraPostCSSPlugins": {
      "id": "virtual: config-extraPostCSSPlugins",
      "key": "extraPostCSSPlugins",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraBabelPresets": {
      "id": "virtual: config-extraBabelPresets",
      "key": "extraBabelPresets",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraBabelPlugins": {
      "id": "virtual: config-extraBabelPlugins",
      "key": "extraBabelPlugins",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraBabelIncludes": {
      "id": "virtual: config-extraBabelIncludes",
      "key": "extraBabelIncludes",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-externals": {
      "id": "virtual: config-externals",
      "key": "externals",
      "config": {
        "default": {}
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-esm": {
      "id": "virtual: config-esm",
      "key": "esm",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-devtool": {
      "id": "virtual: config-devtool",
      "key": "devtool",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-depTranspiler": {
      "id": "virtual: config-depTranspiler",
      "key": "depTranspiler",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-define": {
      "id": "virtual: config-define",
      "key": "define",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-deadCode": {
      "id": "virtual: config-deadCode",
      "key": "deadCode",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssPublicPath": {
      "id": "virtual: config-cssPublicPath",
      "key": "cssPublicPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssMinifierOptions": {
      "id": "virtual: config-cssMinifierOptions",
      "key": "cssMinifierOptions",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssMinifier": {
      "id": "virtual: config-cssMinifier",
      "key": "cssMinifier",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssLoaderModules": {
      "id": "virtual: config-cssLoaderModules",
      "key": "cssLoaderModules",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssLoader": {
      "id": "virtual: config-cssLoader",
      "key": "cssLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-copy": {
      "id": "virtual: config-copy",
      "key": "copy",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-checkDepCssModules": {
      "id": "virtual: config-checkDepCssModules",
      "key": "checkDepCssModules",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-chainWebpack": {
      "id": "virtual: config-chainWebpack",
      "key": "chainWebpack",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cacheDirectoryPath": {
      "id": "virtual: config-cacheDirectoryPath",
      "key": "cacheDirectoryPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-babelLoaderCustomize": {
      "id": "virtual: config-babelLoaderCustomize",
      "key": "babelLoaderCustomize",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-autoprefixer": {
      "id": "virtual: config-autoprefixer",
      "key": "autoprefixer",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-autoCSSModules": {
      "id": "virtual: config-autoCSSModules",
      "key": "autoCSSModules",
      "config": {
        "default": true
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-alias": {
      "id": "virtual: config-alias",
      "key": "alias",
      "config": {
        "default": {
          "umi": "@@/exports",
          "react": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/react",
          "react-dom": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/react-dom",
          "react-router": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/react-router",
          "react-router-dom": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/react-router-dom"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "./node_modules/@umijs/preset-umi/dist/features/crossorigin/crossorigin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/crossorigin/crossorigin.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/crossorigin/crossorigin",
      "key": "crossorigin"
    },
    "./node_modules/@umijs/preset-umi/dist/features/depsOnDemand/depsOnDemand": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            1
          ]
        },
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/depsOnDemand/depsOnDemand.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/depsOnDemand/depsOnDemand",
      "key": "depsOnDemand"
    },
    "./node_modules/@umijs/preset-umi/dist/features/devTool/devTool": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/devTool/devTool.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/devTool/devTool",
      "key": "devTool"
    },
    "./node_modules/@umijs/preset-umi/dist/features/esbuildHelperChecker/esbuildHelperChecker": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 217
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/esbuildHelperChecker/esbuildHelperChecker.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/esbuildHelperChecker/esbuildHelperChecker",
      "key": "esbuildHelperChecker"
    },
    "./node_modules/@umijs/preset-umi/dist/features/esmi/esmi": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 44
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/esmi/esmi.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/esmi/esmi",
      "key": "esmi"
    },
    "./node_modules/@umijs/preset-umi/dist/features/exportStatic/exportStatic": {
      "config": {},
      "time": {
        "hooks": {
          "onCheck": [
            0
          ]
        },
        "register": 20
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/exportStatic/exportStatic.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/exportStatic/exportStatic",
      "key": "exportStatic"
    },
    "./node_modules/@umijs/preset-umi/dist/features/favicons/favicons": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            0
          ]
        },
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/favicons/favicons.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/favicons/favicons",
      "key": "favicons"
    },
    "./node_modules/@umijs/preset-umi/dist/features/helmet/helmet": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/helmet/helmet.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/helmet/helmet",
      "key": "helmet"
    },
    "./node_modules/@umijs/preset-umi/dist/features/icons/icons": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/icons/icons.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/icons/icons",
      "key": "icons"
    },
    "./node_modules/@umijs/preset-umi/dist/features/mock/mock": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 52
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/mock/mock.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/mock/mock",
      "key": "mock"
    },
    "./node_modules/@umijs/preset-umi/dist/features/mpa/mpa": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/mpa/mpa.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/mpa/mpa",
      "key": "mpa"
    },
    "./node_modules/@umijs/preset-umi/dist/features/okam/okam": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            0
          ],
          "onCheck": [
            0
          ]
        },
        "register": 1
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/okam/okam.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/okam/okam",
      "key": "okam"
    },
    "./node_modules/@umijs/preset-umi/dist/features/overrides/overrides": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/overrides/overrides.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/overrides/overrides",
      "key": "overrides"
    },
    "./node_modules/@umijs/preset-umi/dist/features/phantomDependency/phantomDependency": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/phantomDependency/phantomDependency.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/phantomDependency/phantomDependency",
      "key": "phantomDependency"
    },
    "./node_modules/@umijs/preset-umi/dist/features/polyfill/polyfill": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            1
          ]
        },
        "register": 1
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/polyfill/polyfill.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/polyfill/polyfill",
      "key": "polyfill"
    },
    "./node_modules/@umijs/preset-umi/dist/features/polyfill/publicPathPolyfill": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/polyfill/publicPathPolyfill.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/polyfill/publicPathPolyfill",
      "key": "publicPathPolyfill"
    },
    "./node_modules/@umijs/preset-umi/dist/features/prepare/prepare": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/prepare/prepare.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/prepare/prepare",
      "key": "prepare"
    },
    "./node_modules/@umijs/preset-umi/dist/features/routePrefetch/routePrefetch": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/routePrefetch/routePrefetch.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/routePrefetch/routePrefetch",
      "key": "routePrefetch"
    },
    "./node_modules/@umijs/preset-umi/dist/features/stagewise/stagewise": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/stagewise/stagewise.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/stagewise/stagewise",
      "key": "stagewise"
    },
    "./node_modules/@umijs/preset-umi/dist/features/terminal/terminal": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/terminal/terminal.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/terminal/terminal",
      "key": "terminal"
    },
    "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/tmpFiles": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 21
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/tmpFiles/tmpFiles.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/tmpFiles",
      "key": "tmpFiles"
    },
    "./node_modules/@umijs/preset-umi/dist/features/clientLoader/clientLoader": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 4
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/clientLoader/clientLoader.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/clientLoader/clientLoader",
      "key": "clientLoader"
    },
    "./node_modules/@umijs/preset-umi/dist/features/routeProps/routeProps": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/routeProps/routeProps.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/routeProps/routeProps",
      "key": "routeProps"
    },
    "./node_modules/@umijs/preset-umi/dist/features/ssr/ssr": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/ssr/ssr.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/ssr/ssr",
      "key": "ssr"
    },
    "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/configTypes": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/tmpFiles/configTypes.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/configTypes",
      "key": "configTypes"
    },
    "./node_modules/@umijs/preset-umi/dist/features/transform/transform": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/transform/transform.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/transform/transform",
      "key": "transform"
    },
    "./node_modules/@umijs/preset-umi/dist/features/lowImport/lowImport": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/lowImport/lowImport.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/lowImport/lowImport",
      "key": "lowImport"
    },
    "./node_modules/@umijs/preset-umi/dist/features/vite/vite": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/vite/vite.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/vite/vite",
      "key": "vite"
    },
    "./node_modules/@umijs/preset-umi/dist/features/apiRoute/apiRoute": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 5
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/apiRoute/apiRoute.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/apiRoute/apiRoute",
      "key": "apiRoute"
    },
    "./node_modules/@umijs/preset-umi/dist/features/monorepo/redirect": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 22
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/monorepo/redirect.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/monorepo/redirect",
      "key": "monorepoRedirect"
    },
    "./node_modules/@umijs/preset-umi/dist/features/test/test": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/test/test.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/test/test",
      "key": "test"
    },
    "./node_modules/@umijs/preset-umi/dist/features/clickToComponent/clickToComponent": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/clickToComponent/clickToComponent.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/clickToComponent/clickToComponent",
      "key": "clickToComponent"
    },
    "./node_modules/@umijs/preset-umi/dist/features/legacy/legacy": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/legacy/legacy.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/legacy/legacy",
      "key": "legacy"
    },
    "./node_modules/@umijs/preset-umi/dist/features/classPropertiesLoose/classPropertiesLoose": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/classPropertiesLoose/classPropertiesLoose.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/classPropertiesLoose/classPropertiesLoose",
      "key": "classPropertiesLoose"
    },
    "./node_modules/@umijs/preset-umi/dist/features/webpack/webpack": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/webpack/webpack.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/webpack/webpack",
      "key": "preset-umi:webpack"
    },
    "./node_modules/@umijs/preset-umi/dist/features/swc/swc": {
      "config": {},
      "time": {
        "hooks": {
          "addOnDemandDeps": [
            1
          ]
        },
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/swc/swc.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/swc/swc",
      "key": "swc"
    },
    "./node_modules/@umijs/preset-umi/dist/features/ui/ui": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/ui/ui.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/ui/ui",
      "key": "ui"
    },
    "./node_modules/@umijs/preset-umi/dist/features/mako/mako": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ],
          "onStart": [
            3
          ]
        },
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/mako/mako.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/mako/mako",
      "key": "mako"
    },
    "./node_modules/@umijs/preset-umi/dist/features/utoopack/utoopack": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/utoopack/utoopack.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/utoopack/utoopack",
      "key": "utoopack"
    },
    "./node_modules/@umijs/preset-umi/dist/features/hmrGuardian/hmrGuardian": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/hmrGuardian/hmrGuardian.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/hmrGuardian/hmrGuardian",
      "key": "hmrGuardian"
    },
    "./node_modules/@umijs/preset-umi/dist/features/routePreloadOnLoad/routePreloadOnLoad": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 28
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/routePreloadOnLoad/routePreloadOnLoad.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/routePreloadOnLoad/routePreloadOnLoad",
      "key": "routePreloadOnLoad"
    },
    "./node_modules/@umijs/preset-umi/dist/features/forget/forget": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/forget/forget.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/forget/forget",
      "key": "forget"
    },
    "./node_modules/@umijs/preset-umi/dist/features/bundler/bundler": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/features/bundler/bundler.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/features/bundler/bundler",
      "key": "preset-umi:bundler"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/build": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 5
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/build.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/build",
      "key": "build"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/config/config": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 43
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/config/config.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/config/config",
      "key": "config"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/dev/dev": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            254
          ],
          "onStart": [
            0
          ]
        },
        "register": 49
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/dev/dev.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/dev/dev",
      "key": "dev"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/help": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/help.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/help",
      "key": "help"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/lint": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/lint.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/lint",
      "key": "lint"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/setup": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/setup.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/setup",
      "key": "setup"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/deadcode": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/deadcode.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/deadcode",
      "key": "deadcode"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/version": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/version.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/version",
      "key": "version"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/page": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/generators/page.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/page",
      "key": "generator:page"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/prettier": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/generators/prettier.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/prettier",
      "key": "generator:prettier"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/tsconfig": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/generators/tsconfig.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/tsconfig",
      "key": "generator:tsconfig"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/jest": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/generators/jest.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/jest",
      "key": "generator:jest"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/tailwindcss": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/generators/tailwindcss.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/tailwindcss",
      "key": "generator:tailwindcss"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/dva": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/generators/dva.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/dva",
      "key": "generator:dva"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/component": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/generators/component.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/component",
      "key": "generator:component"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/mock": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/generators/mock.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/mock",
      "key": "generator:mock"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/cypress": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/generators/cypress.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/cypress",
      "key": "generator:cypress"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/api": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/generators/api.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/api",
      "key": "generator:api"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/precommit": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/generators/precommit.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/precommit",
      "key": "generator:precommit"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/plugin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/plugin.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/plugin",
      "key": "command:plugin"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/verify-commit": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/verify-commit.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/verify-commit",
      "key": "verifyCommit"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/preview": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 34
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/preview.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/preview",
      "key": "preview"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/mfsu/mfsu": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/dist/commands/mfsu/mfsu.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/mfsu/mfsu",
      "key": "mfsu-cli"
    },
    "@umijs/plugin-run": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugin-run/dist/index.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "@umijs/plugin-run",
      "key": "run"
    },
    "./node_modules/@umijs/plugins/dist/access": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/access.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/access",
      "key": "access"
    },
    "./node_modules/@umijs/plugins/dist/analytics": {
      "config": {
        "onChange": "reload"
      },
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/analytics.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/analytics",
      "key": "analytics"
    },
    "./node_modules/@umijs/plugins/dist/antd": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            2
          ],
          "modifyAppData": [
            1
          ]
        },
        "register": 6
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/antd.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/antd",
      "key": "antd"
    },
    "./node_modules/@umijs/plugins/dist/dva": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 9
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/dva.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/dva",
      "key": "dva"
    },
    "./node_modules/@umijs/plugins/dist/initial-state": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/initial-state.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/initial-state",
      "key": "initialState"
    },
    "./node_modules/@umijs/plugins/dist/layout": {
      "config": {
        "onChange": "regenerateTmpFiles"
      },
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ],
          "addLayouts": [
            0
          ],
          "modifyAppData": [
            1
          ]
        },
        "register": 4
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/layout.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/layout",
      "key": "layout"
    },
    "./node_modules/@umijs/plugins/dist/locale": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/locale.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/locale",
      "key": "locale"
    },
    "./node_modules/@umijs/plugins/dist/mf": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/mf.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/mf",
      "key": "mf"
    },
    "./node_modules/@umijs/plugins/dist/model": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/model.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/model",
      "key": "model"
    },
    "./node_modules/@umijs/plugins/dist/moment2dayjs": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ]
        },
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/moment2dayjs.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/moment2dayjs",
      "key": "moment2dayjs"
    },
    "./node_modules/@umijs/plugins/dist/qiankun": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/qiankun.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/qiankun",
      "key": "qiankun"
    },
    "./node_modules/@umijs/plugins/dist/qiankun/master": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/qiankun/master.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/qiankun/master",
      "key": "qiankun-master"
    },
    "./node_modules/@umijs/plugins/dist/qiankun/slave": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/qiankun/slave.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/qiankun/slave",
      "key": "qiankun-slave"
    },
    "./node_modules/@umijs/plugins/dist/react-query": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/react-query.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/react-query",
      "key": "reactQuery"
    },
    "./node_modules/@umijs/plugins/dist/request": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/request.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/request",
      "key": "request"
    },
    "./node_modules/@umijs/plugins/dist/styled-components": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/styled-components.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/styled-components",
      "key": "styledComponents"
    },
    "./node_modules/@umijs/plugins/dist/tailwindcss": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/tailwindcss.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/tailwindcss",
      "key": "tailwindcss"
    },
    "./node_modules/@umijs/plugins/dist/valtio": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/plugins/dist/valtio.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/plugins/dist/valtio",
      "key": "valtio"
    },
    "./node_modules/@umijs/max/dist/plugins/maxAlias": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ]
        },
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/max/dist/plugins/maxAlias.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/max/dist/plugins/maxAlias",
      "key": "maxAlias"
    },
    "./node_modules/@umijs/max/dist/plugins/maxAppData": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            0
          ]
        },
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/max/dist/plugins/maxAppData.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/max/dist/plugins/maxAppData",
      "key": "maxAppData"
    },
    "./node_modules/@umijs/max/dist/plugins/maxChecker": {
      "config": {},
      "time": {
        "hooks": {
          "onCheckPkgJSON": [
            1
          ]
        },
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/max/dist/plugins/maxChecker.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/max/dist/plugins/maxChecker",
      "key": "maxChecker"
    },
    "./node_modules/umi-presets-pro/dist/features/proconfig": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ]
        },
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/umi-presets-pro/dist/features/proconfig.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/umi-presets-pro/dist/features/proconfig",
      "key": "proconfig"
    },
    "./node_modules/umi-presets-pro/dist/features/maxtabs": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/umi-presets-pro/dist/features/maxtabs.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/umi-presets-pro/dist/features/maxtabs",
      "key": "maxtabs"
    },
    "@umijs/max-plugin-openapi": {
      "config": {},
      "time": {
        "hooks": {
          "modifyRoutes": [
            0
          ],
          "onStart": [
            0
          ]
        },
        "register": 222
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/max-plugin-openapi/dist/index.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "@umijs/max-plugin-openapi",
      "key": "openAPI"
    },
    "./node_modules/@alita/plugins/dist/keepalive": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 133
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@alita/plugins/dist/keepalive.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@alita/plugins/dist/keepalive",
      "key": "keepalive"
    },
    "./node_modules/@alita/plugins/dist/tabs-layout": {
      "config": {
        "onChange": "regenerateTmpFiles"
      },
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@alita/plugins/dist/tabs-layout.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@alita/plugins/dist/tabs-layout",
      "key": "tabsLayout"
    },
    "@umijs/request-record": {
      "config": {
        "default": {
          "mock": {
            "outputDir": "./mock",
            "fileName": "requestRecord.mock.js",
            "usingRole": "default"
          },
          "outputDir": "./types"
        }
      },
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ],
          "modifyAppData": [
            0
          ]
        },
        "register": 72
      },
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/request-record/dist/cjs/index.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "@umijs/request-record",
      "key": "requestRecord"
    },
    "./node_modules/@umijs/core/dist/service/generatePlugin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/core/dist/service/generatePlugin.js",
      "cwd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin",
      "id": "./node_modules/@umijs/core/dist/service/generatePlugin",
      "key": "generatePlugin"
    }
  },
  "presets": [],
  "name": "dev",
  "args": {
    "_": []
  },
  "userConfig": {
    "hash": true,
    "publicPath": "/",
    "routes": [
      {
        "path": "/user",
        "layout": false,
        "routes": [
          {
            "name": "login",
            "path": "/user/login",
            "component": "./user/login"
          },
          {
            "name": "register",
            "path": "/user/register",
            "component": "./user/register"
          },
          {
            "name": "register-result",
            "path": "/user/register-result",
            "component": "./user/register-result"
          }
        ]
      },
      {
        "path": "/welcome",
        "name": "welcome",
        "icon": "smile",
        "component": "./Welcome"
      },
      {
        "name": "system",
        "icon": "setting",
        "path": "/system",
        "routes": [
          {
            "path": "/system",
            "redirect": "/system/user-management"
          },
          {
            "name": "user-management",
            "icon": "user",
            "path": "/system/user-management",
            "component": "./user-management"
          },
          {
            "name": "role-management",
            "icon": "team",
            "path": "/system/role-management",
            "component": "./role-management"
          },
          {
            "name": "menu-management",
            "icon": "menu",
            "path": "/system/menu-management",
            "component": "./menu-management"
          },
          {
            "name": "user-log",
            "icon": "file-text",
            "path": "/system/user-log",
            "component": "./user-log"
          }
        ]
      },
      {
        "name": "change-password",
        "path": "/user/change-password",
        "component": "./user/change-password",
        "hideInMenu": true
      },
      {
        "name": "account.center",
        "path": "/account/center",
        "component": "./account/center",
        "hideInMenu": true
      },
      {
        "path": "/",
        "redirect": "/welcome"
      },
      {
        "path": "*",
        "layout": false,
        "component": "./404"
      }
    ],
    "ignoreMomentLocale": true,
    "proxy": {
      "/api/": {
        "target": "http://localhost:15000",
        "changeOrigin": true,
        "pathRewrite": {
          "^/api/": "/apiservice/"
        },
        "headers": {
          "Connection": "keep-alive"
        }
      }
    },
    "fastRefresh": true,
    "model": {},
    "initialState": {},
    "title": "Ant Design Pro",
    "layout": {
      "locale": true,
      "navTheme": "light",
      "colorPrimary": "#1890ff",
      "layout": "mix",
      "contentWidth": "Fluid",
      "fixedHeader": false,
      "fixSiderbar": true,
      "colorWeak": false,
      "title": "Ant Design Pro",
      "pwa": true,
      "logo": "https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg",
      "iconfontUrl": "",
      "token": {}
    },
    "moment2dayjs": {
      "preset": "antd",
      "plugins": [
        "duration"
      ]
    },
    "locale": {
      "default": "zh-CN",
      "antd": true,
      "baseNavigator": true
    },
    "antd": {
      "appConfig": {},
      "configProvider": {
        "theme": {
          "cssVar": true,
          "token": {
            "fontFamily": "AlibabaSans, sans-serif"
          }
        }
      }
    },
    "request": {},
    "access": {},
    "headScripts": [
      {
        "src": "/scripts/loading.js",
        "async": true
      }
    ],
    "presets": [
      "umi-presets-pro"
    ],
    "openAPI": [
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/config/oneapi.json",
        "mock": false
      },
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "https://gw.alipayobjects.com/os/antfincdn/CA1dOm%2631B/openapi.json",
        "projectName": "swagger",
        "mock": false
      }
    ],
    "mock": false,
    "mako": {},
    "esbuildMinifyIIFE": true,
    "requestRecord": {},
    "exportStatic": {}
  },
  "mainConfigFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/config/config.ts",
  "config": {
    "routeLoader": {
      "moduleType": "esm"
    },
    "mountElementId": "root",
    "history": {
      "type": "browser"
    },
    "base": "/",
    "svgr": {},
    "publicPath": "/",
    "mfsu": false,
    "ignoreMomentLocale": true,
    "externals": {},
    "autoCSSModules": true,
    "alias": {
      "umi": "@@/exports",
      "react": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/react",
      "react-dom": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/react-dom",
      "react-router": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/react-router",
      "react-router-dom": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/react-router-dom",
      "@": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src",
      "@@": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/.umi",
      "regenerator-runtime": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@umijs/preset-umi/node_modules/regenerator-runtime",
      "antd": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/antd",
      "moment": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/dayjs",
      "@umijs/max": "@@/exports"
    },
    "requestRecord": {
      "mock": {
        "outputDir": "./mock",
        "fileName": "requestRecord.mock.js",
        "usingRole": "default"
      },
      "outputDir": "./types"
    },
    "hash": true,
    "routes": [
      {
        "path": "/user",
        "layout": false,
        "routes": [
          {
            "name": "login",
            "path": "/user/login",
            "component": "./user/login"
          },
          {
            "name": "register",
            "path": "/user/register",
            "component": "./user/register"
          },
          {
            "name": "register-result",
            "path": "/user/register-result",
            "component": "./user/register-result"
          }
        ]
      },
      {
        "path": "/welcome",
        "name": "welcome",
        "icon": "smile",
        "component": "./Welcome"
      },
      {
        "name": "system",
        "icon": "setting",
        "path": "/system",
        "routes": [
          {
            "path": "/system",
            "redirect": "/system/user-management"
          },
          {
            "name": "user-management",
            "icon": "user",
            "path": "/system/user-management",
            "component": "./user-management"
          },
          {
            "name": "role-management",
            "icon": "team",
            "path": "/system/role-management",
            "component": "./role-management"
          },
          {
            "name": "menu-management",
            "icon": "menu",
            "path": "/system/menu-management",
            "component": "./menu-management"
          },
          {
            "name": "user-log",
            "icon": "file-text",
            "path": "/system/user-log",
            "component": "./user-log"
          }
        ]
      },
      {
        "name": "change-password",
        "path": "/user/change-password",
        "component": "./user/change-password",
        "hideInMenu": true
      },
      {
        "name": "account.center",
        "path": "/account/center",
        "component": "./account/center",
        "hideInMenu": true
      },
      {
        "path": "/",
        "redirect": "/welcome"
      },
      {
        "path": "*",
        "layout": false,
        "component": "./404"
      }
    ],
    "proxy": {
      "/api/": {
        "target": "http://localhost:15000",
        "changeOrigin": true,
        "pathRewrite": {
          "^/api/": "/apiservice/"
        },
        "headers": {
          "Connection": "keep-alive"
        }
      }
    },
    "fastRefresh": true,
    "model": {},
    "initialState": {},
    "title": "Ant Design Pro",
    "layout": {
      "locale": true,
      "navTheme": "light",
      "colorPrimary": "#1890ff",
      "layout": "mix",
      "contentWidth": "Fluid",
      "fixedHeader": false,
      "fixSiderbar": true,
      "colorWeak": false,
      "title": "Ant Design Pro",
      "pwa": true,
      "logo": "https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg",
      "iconfontUrl": "",
      "token": {}
    },
    "moment2dayjs": {
      "preset": "antd",
      "plugins": [
        "duration"
      ]
    },
    "locale": {
      "default": "zh-CN",
      "antd": true,
      "baseNavigator": true
    },
    "antd": {
      "appConfig": {},
      "configProvider": {
        "theme": {
          "cssVar": true,
          "token": {
            "fontFamily": "AlibabaSans, sans-serif"
          }
        }
      }
    },
    "request": {},
    "access": {},
    "headScripts": [
      {
        "src": "/scripts/loading.js",
        "async": true
      }
    ],
    "presets": [
      "umi-presets-pro"
    ],
    "openAPI": [
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/config/oneapi.json",
        "mock": false
      },
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "https://gw.alipayobjects.com/os/antfincdn/CA1dOm%2631B/openapi.json",
        "projectName": "swagger",
        "mock": false
      }
    ],
    "mock": false,
    "mako": {
      "plugins": [
        {
          "name": "UmiHtmlGenerationMako"
        }
      ]
    },
    "esbuildMinifyIIFE": true,
    "exportStatic": {},
    "targets": {
      "chrome": 80
    },
    "hmrGuardian": false,
    "theme": {
      "blue-base": "#1890ff",
      "blue-1": "#e6f7ff",
      "blue-2": "#bae7ff",
      "blue-3": "#91d5ff",
      "blue-4": "#69c0ff",
      "blue-5": "#40a9ff",
      "blue-6": "#1890ff",
      "blue-7": "#096dd9",
      "blue-8": "#0050b3",
      "blue-9": "#003a8c",
      "blue-10": "#002766",
      "purple-base": "#722ed1",
      "purple-1": "#f9f0ff",
      "purple-2": "#efdbff",
      "purple-3": "#d3adf7",
      "purple-4": "#b37feb",
      "purple-5": "#9254de",
      "purple-6": "#722ed1",
      "purple-7": "#531dab",
      "purple-8": "#391085",
      "purple-9": "#22075e",
      "purple-10": "#120338",
      "cyan-base": "#13c2c2",
      "cyan-1": "#e6fffb",
      "cyan-2": "#b5f5ec",
      "cyan-3": "#87e8de",
      "cyan-4": "#5cdbd3",
      "cyan-5": "#36cfc9",
      "cyan-6": "#13c2c2",
      "cyan-7": "#08979c",
      "cyan-8": "#006d75",
      "cyan-9": "#00474f",
      "cyan-10": "#002329",
      "green-base": "#52c41a",
      "green-1": "#f6ffed",
      "green-2": "#d9f7be",
      "green-3": "#b7eb8f",
      "green-4": "#95de64",
      "green-5": "#73d13d",
      "green-6": "#52c41a",
      "green-7": "#389e0d",
      "green-8": "#237804",
      "green-9": "#135200",
      "green-10": "#092b00",
      "magenta-base": "#eb2f96",
      "magenta-1": "#fff0f6",
      "magenta-2": "#ffd6e7",
      "magenta-3": "#ffadd2",
      "magenta-4": "#ff85c0",
      "magenta-5": "#f759ab",
      "magenta-6": "#eb2f96",
      "magenta-7": "#c41d7f",
      "magenta-8": "#9e1068",
      "magenta-9": "#780650",
      "magenta-10": "#520339",
      "pink-base": "#eb2f96",
      "pink-1": "#fff0f6",
      "pink-2": "#ffd6e7",
      "pink-3": "#ffadd2",
      "pink-4": "#ff85c0",
      "pink-5": "#f759ab",
      "pink-6": "#eb2f96",
      "pink-7": "#c41d7f",
      "pink-8": "#9e1068",
      "pink-9": "#780650",
      "pink-10": "#520339",
      "red-base": "#f5222d",
      "red-1": "#fff1f0",
      "red-2": "#ffccc7",
      "red-3": "#ffa39e",
      "red-4": "#ff7875",
      "red-5": "#ff4d4f",
      "red-6": "#f5222d",
      "red-7": "#cf1322",
      "red-8": "#a8071a",
      "red-9": "#820014",
      "red-10": "#5c0011",
      "orange-base": "#fa8c16",
      "orange-1": "#fff7e6",
      "orange-2": "#ffe7ba",
      "orange-3": "#ffd591",
      "orange-4": "#ffc069",
      "orange-5": "#ffa940",
      "orange-6": "#fa8c16",
      "orange-7": "#d46b08",
      "orange-8": "#ad4e00",
      "orange-9": "#873800",
      "orange-10": "#612500",
      "yellow-base": "#fadb14",
      "yellow-1": "#feffe6",
      "yellow-2": "#ffffb8",
      "yellow-3": "#fffb8f",
      "yellow-4": "#fff566",
      "yellow-5": "#ffec3d",
      "yellow-6": "#fadb14",
      "yellow-7": "#d4b106",
      "yellow-8": "#ad8b00",
      "yellow-9": "#876800",
      "yellow-10": "#614700",
      "volcano-base": "#fa541c",
      "volcano-1": "#fff2e8",
      "volcano-2": "#ffd8bf",
      "volcano-3": "#ffbb96",
      "volcano-4": "#ff9c6e",
      "volcano-5": "#ff7a45",
      "volcano-6": "#fa541c",
      "volcano-7": "#d4380d",
      "volcano-8": "#ad2102",
      "volcano-9": "#871400",
      "volcano-10": "#610b00",
      "geekblue-base": "#2f54eb",
      "geekblue-1": "#f0f5ff",
      "geekblue-2": "#d6e4ff",
      "geekblue-3": "#adc6ff",
      "geekblue-4": "#85a5ff",
      "geekblue-5": "#597ef7",
      "geekblue-6": "#2f54eb",
      "geekblue-7": "#1d39c4",
      "geekblue-8": "#10239e",
      "geekblue-9": "#061178",
      "geekblue-10": "#030852",
      "lime-base": "#a0d911",
      "lime-1": "#fcffe6",
      "lime-2": "#f4ffb8",
      "lime-3": "#eaff8f",
      "lime-4": "#d3f261",
      "lime-5": "#bae637",
      "lime-6": "#a0d911",
      "lime-7": "#7cb305",
      "lime-8": "#5b8c00",
      "lime-9": "#3f6600",
      "lime-10": "#254000",
      "gold-base": "#faad14",
      "gold-1": "#fffbe6",
      "gold-2": "#fff1b8",
      "gold-3": "#ffe58f",
      "gold-4": "#ffd666",
      "gold-5": "#ffc53d",
      "gold-6": "#faad14",
      "gold-7": "#d48806",
      "gold-8": "#ad6800",
      "gold-9": "#874d00",
      "gold-10": "#613400",
      "preset-colors": "pink, magenta, red, volcano, orange, yellow, gold, cyan, lime, green, blue, geekblue,",
      "theme": "default",
      "ant-prefix": "ant",
      "html-selector": "html",
      "primary-color": "#1890ff",
      "primary-color-hover": "#40a9ff",
      "primary-color-active": "#096dd9",
      "primary-color-outline": "rgba(24, 144, 255, 0.2)",
      "processing-color": "#1890ff",
      "info-color": "#1890ff",
      "info-color-deprecated-bg": "#e6f7ff",
      "info-color-deprecated-border": "#91d5ff",
      "success-color": "#52c41a",
      "success-color-hover": "#73d13d",
      "success-color-active": "#389e0d",
      "success-color-outline": "rgba(82, 196, 26, 0.2)",
      "success-color-deprecated-bg": "#f6ffed",
      "success-color-deprecated-border": "#b7eb8f",
      "warning-color": "#faad14",
      "warning-color-hover": "#ffc53d",
      "warning-color-active": "#d48806",
      "warning-color-outline": "rgba(250, 173, 20, 0.2)",
      "warning-color-deprecated-bg": "#fffbe6",
      "warning-color-deprecated-border": "#ffe58f",
      "error-color": "#ff4d4f",
      "error-color-hover": "#ff7875",
      "error-color-active": "#d9363e",
      "error-color-outline": "rgba(255, 77, 79, 0.2)",
      "error-color-deprecated-bg": "#fff2f0",
      "error-color-deprecated-border": "#ffccc7",
      "highlight-color": "#ff4d4f",
      "normal-color": "#d9d9d9",
      "white": "#fff",
      "black": "#000",
      "primary-1": "#e6f7ff",
      "primary-2": "#bae7ff",
      "primary-3": "#91d5ff",
      "primary-4": "#69c0ff",
      "primary-5": "#40a9ff",
      "primary-6": "#1890ff",
      "primary-7": "#096dd9",
      "primary-8": "#0050b3",
      "primary-9": "#003a8c",
      "primary-10": "#002766",
      "component-background": "#fff",
      "popover-background": "#fff",
      "popover-customize-border-color": "#f0f0f0",
      "font-family": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "code-family": "'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace",
      "text-color": "rgba(0, 0, 0, 0.85)",
      "text-color-secondary": "rgba(0, 0, 0, 0.45)",
      "text-color-inverse": "#fff",
      "icon-color": "inherit",
      "icon-color-hover": "rgba(0, 0, 0, 0.75)",
      "heading-color": "rgba(0, 0, 0, 0.85)",
      "text-color-dark": "rgba(255, 255, 255, 0.85)",
      "text-color-secondary-dark": "rgba(255, 255, 255, 0.65)",
      "text-selection-bg": "#1890ff",
      "font-variant-base": "tabular-nums",
      "font-feature-settings-base": "tnum",
      "font-size-base": "14px",
      "font-size-lg": "16px",
      "font-size-sm": "12px",
      "heading-1-size": "38px",
      "heading-2-size": "30px",
      "heading-3-size": "24px",
      "heading-4-size": "20px",
      "heading-5-size": "16px",
      "line-height-base": "1.5715",
      "border-radius-base": "2px",
      "border-radius-sm": "2px",
      "control-border-radius": "2px",
      "arrow-border-radius": "2px",
      "padding-lg": "24px",
      "padding-md": "16px",
      "padding-sm": "12px",
      "padding-xs": "8px",
      "padding-xss": "4px",
      "control-padding-horizontal": "12px",
      "control-padding-horizontal-sm": "8px",
      "margin-lg": "24px",
      "margin-md": "16px",
      "margin-sm": "12px",
      "margin-xs": "8px",
      "margin-xss": "4px",
      "height-base": "32px",
      "height-lg": "40px",
      "height-sm": "24px",
      "item-active-bg": "#e6f7ff",
      "item-hover-bg": "#f5f5f5",
      "iconfont-css-prefix": "anticon",
      "link-color": "#1890ff",
      "link-hover-color": "#40a9ff",
      "link-active-color": "#096dd9",
      "link-decoration": "none",
      "link-hover-decoration": "none",
      "link-focus-decoration": "none",
      "link-focus-outline": "0",
      "ease-base-out": "cubic-bezier(0.7, 0.3, 0.1, 1)",
      "ease-base-in": "cubic-bezier(0.9, 0, 0.3, 0.7)",
      "ease-out": "cubic-bezier(0.215, 0.61, 0.355, 1)",
      "ease-in": "cubic-bezier(0.55, 0.055, 0.675, 0.19)",
      "ease-in-out": "cubic-bezier(0.645, 0.045, 0.355, 1)",
      "ease-out-back": "cubic-bezier(0.12, 0.4, 0.29, 1.46)",
      "ease-in-back": "cubic-bezier(0.71, -0.46, 0.88, 0.6)",
      "ease-in-out-back": "cubic-bezier(0.71, -0.46, 0.29, 1.46)",
      "ease-out-circ": "cubic-bezier(0.08, 0.82, 0.17, 1)",
      "ease-in-circ": "cubic-bezier(0.6, 0.04, 0.98, 0.34)",
      "ease-in-out-circ": "cubic-bezier(0.78, 0.14, 0.15, 0.86)",
      "ease-out-quint": "cubic-bezier(0.23, 1, 0.32, 1)",
      "ease-in-quint": "cubic-bezier(0.755, 0.05, 0.855, 0.06)",
      "ease-in-out-quint": "cubic-bezier(0.86, 0, 0.07, 1)",
      "border-color-base": "#d9d9d9",
      "border-color-split": "#f0f0f0",
      "border-color-inverse": "#fff",
      "border-width-base": "1px",
      "border-style-base": "solid",
      "outline-blur-size": "0",
      "outline-width": "2px",
      "outline-color": "#1890ff",
      "outline-fade": "20%",
      "background-color-light": "#fafafa",
      "background-color-base": "#f5f5f5",
      "disabled-color": "rgba(0, 0, 0, 0.25)",
      "disabled-bg": "#f5f5f5",
      "disabled-active-bg": "#e6e6e6",
      "disabled-color-dark": "rgba(255, 255, 255, 0.35)",
      "shadow-color": "rgba(0, 0, 0, 0.15)",
      "shadow-color-inverse": "#fff",
      "box-shadow-base": "0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05)",
      "shadow-1-up": "0 -6px 16px -8px rgba(0, 0, 0, 0.08), 0 -9px 28px 0 rgba(0, 0, 0, 0.05), 0 -12px 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-1-down": "0 6px 16px -8px rgba(0, 0, 0, 0.08), 0 9px 28px 0 rgba(0, 0, 0, 0.05), 0 12px 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-1-left": "-6px 0 16px -8px rgba(0, 0, 0, 0.08), -9px 0 28px 0 rgba(0, 0, 0, 0.05), -12px 0 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-1-right": "6px 0 16px -8px rgba(0, 0, 0, 0.08), 9px 0 28px 0 rgba(0, 0, 0, 0.05), 12px 0 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-2": "0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05)",
      "btn-font-weight": "400",
      "btn-border-radius-base": "2px",
      "btn-border-radius-sm": "2px",
      "btn-border-width": "1px",
      "btn-border-style": "solid",
      "btn-shadow": "0 2px 0 rgba(0, 0, 0, 0.015)",
      "btn-primary-shadow": "0 2px 0 rgba(0, 0, 0, 0.045)",
      "btn-text-shadow": "0 -1px 0 rgba(0, 0, 0, 0.12)",
      "btn-primary-color": "#fff",
      "btn-primary-bg": "#1890ff",
      "btn-default-color": "rgba(0, 0, 0, 0.85)",
      "btn-default-bg": "#fff",
      "btn-default-border": "#d9d9d9",
      "btn-danger-color": "#fff",
      "btn-danger-bg": "#ff4d4f",
      "btn-danger-border": "#ff4d4f",
      "btn-disable-color": "rgba(0, 0, 0, 0.25)",
      "btn-disable-bg": "#f5f5f5",
      "btn-disable-border": "#d9d9d9",
      "btn-default-ghost-color": "#fff",
      "btn-default-ghost-bg": "transparent",
      "btn-default-ghost-border": "#fff",
      "btn-font-size-lg": "16px",
      "btn-font-size-sm": "14px",
      "btn-padding-horizontal-base": "15px",
      "btn-padding-horizontal-lg": "15px",
      "btn-padding-horizontal-sm": "7px",
      "btn-height-base": "32px",
      "btn-height-lg": "40px",
      "btn-height-sm": "24px",
      "btn-line-height": "1.5715",
      "btn-circle-size": "32px",
      "btn-circle-size-lg": "40px",
      "btn-circle-size-sm": "24px",
      "btn-square-size": "32px",
      "btn-square-size-lg": "40px",
      "btn-square-size-sm": "24px",
      "btn-square-only-icon-size": "16px",
      "btn-square-only-icon-size-sm": "14px",
      "btn-square-only-icon-size-lg": "18px",
      "btn-group-border": "#40a9ff",
      "btn-link-hover-bg": "transparent",
      "btn-text-hover-bg": "rgba(0, 0, 0, 0.018)",
      "checkbox-size": "16px",
      "checkbox-color": "#1890ff",
      "checkbox-check-color": "#fff",
      "checkbox-check-bg": "#fff",
      "checkbox-border-width": "1px",
      "checkbox-border-radius": "2px",
      "checkbox-group-item-margin-right": "8px",
      "descriptions-bg": "#fafafa",
      "descriptions-title-margin-bottom": "20px",
      "descriptions-default-padding": "16px 24px",
      "descriptions-middle-padding": "12px 24px",
      "descriptions-small-padding": "8px 16px",
      "descriptions-item-padding-bottom": "16px",
      "descriptions-item-trailing-colon": "true",
      "descriptions-item-label-colon-margin-right": "8px",
      "descriptions-item-label-colon-margin-left": "2px",
      "descriptions-extra-color": "rgba(0, 0, 0, 0.85)",
      "divider-text-padding": "1em",
      "divider-orientation-margin": "5%",
      "divider-color": "rgba(0, 0, 0, 0.06)",
      "divider-vertical-gutter": "8px",
      "dropdown-selected-color": "#1890ff",
      "dropdown-menu-submenu-disabled-bg": "#fff",
      "dropdown-selected-bg": "#e6f7ff",
      "empty-font-size": "14px",
      "radio-size": "16px",
      "radio-top": "0.2em",
      "radio-border-width": "1px",
      "radio-dot-size": "8px",
      "radio-dot-color": "#1890ff",
      "radio-dot-disabled-color": "rgba(0, 0, 0, 0.2)",
      "radio-solid-checked-color": "#fff",
      "radio-button-bg": "#fff",
      "radio-button-checked-bg": "#fff",
      "radio-button-color": "rgba(0, 0, 0, 0.85)",
      "radio-button-hover-color": "#40a9ff",
      "radio-button-active-color": "#096dd9",
      "radio-button-padding-horizontal": "15px",
      "radio-disabled-button-checked-bg": "#e6e6e6",
      "radio-disabled-button-checked-color": "rgba(0, 0, 0, 0.25)",
      "radio-wrapper-margin-right": "8px",
      "screen-xs": "480px",
      "screen-xs-min": "480px",
      "screen-sm": "576px",
      "screen-sm-min": "576px",
      "screen-md": "768px",
      "screen-md-min": "768px",
      "screen-lg": "992px",
      "screen-lg-min": "992px",
      "screen-xl": "1200px",
      "screen-xl-min": "1200px",
      "screen-xxl": "1600px",
      "screen-xxl-min": "1600px",
      "screen-xs-max": "575px",
      "screen-sm-max": "767px",
      "screen-md-max": "991px",
      "screen-lg-max": "1199px",
      "screen-xl-max": "1599px",
      "grid-columns": "24",
      "layout-header-background": "#001529",
      "layout-header-height": "64px",
      "layout-header-padding": "0 50px",
      "layout-header-color": "rgba(0, 0, 0, 0.85)",
      "layout-footer-padding": "24px 50px",
      "layout-footer-background": "#f0f2f5",
      "layout-sider-background": "#001529",
      "layout-trigger-height": "48px",
      "layout-trigger-background": "#002140",
      "layout-trigger-color": "#fff",
      "layout-zero-trigger-width": "36px",
      "layout-zero-trigger-height": "42px",
      "layout-sider-background-light": "#fff",
      "layout-trigger-background-light": "#fff",
      "layout-trigger-color-light": "rgba(0, 0, 0, 0.85)",
      "zindex-badge": "auto",
      "zindex-table-fixed": "2",
      "zindex-affix": "10",
      "zindex-back-top": "10",
      "zindex-picker-panel": "10",
      "zindex-popup-close": "10",
      "zindex-modal": "1000",
      "zindex-modal-mask": "1000",
      "zindex-message": "1010",
      "zindex-notification": "1010",
      "zindex-popover": "1030",
      "zindex-dropdown": "1050",
      "zindex-picker": "1050",
      "zindex-popoconfirm": "1060",
      "zindex-tooltip": "1070",
      "zindex-image": "1080",
      "animation-duration-slow": "0.3s",
      "animation-duration-base": "0.2s",
      "animation-duration-fast": "0.1s",
      "collapse-panel-border-radius": "2px",
      "dropdown-menu-bg": "#fff",
      "dropdown-vertical-padding": "5px",
      "dropdown-edge-child-vertical-padding": "4px",
      "dropdown-font-size": "14px",
      "dropdown-line-height": "22px",
      "label-required-color": "#ff4d4f",
      "label-color": "rgba(0, 0, 0, 0.85)",
      "form-warning-input-bg": "#fff",
      "form-item-margin-bottom": "24px",
      "form-item-trailing-colon": "true",
      "form-vertical-label-padding": "0 0 8px",
      "form-vertical-label-margin": "0",
      "form-item-label-font-size": "14px",
      "form-item-label-height": "32px",
      "form-item-label-colon-margin-right": "8px",
      "form-item-label-colon-margin-left": "2px",
      "form-error-input-bg": "#fff",
      "input-height-base": "32px",
      "input-height-lg": "40px",
      "input-height-sm": "24px",
      "input-padding-horizontal": "11px",
      "input-padding-horizontal-base": "11px",
      "input-padding-horizontal-sm": "7px",
      "input-padding-horizontal-lg": "11px",
      "input-padding-vertical-base": "4px",
      "input-padding-vertical-sm": "0px",
      "input-padding-vertical-lg": "6.5px",
      "input-placeholder-color": "#bfbfbf",
      "input-color": "rgba(0, 0, 0, 0.85)",
      "input-icon-color": "rgba(0, 0, 0, 0.85)",
      "input-border-color": "#d9d9d9",
      "input-bg": "#fff",
      "input-number-hover-border-color": "#40a9ff",
      "input-number-handler-active-bg": "#f4f4f4",
      "input-number-handler-hover-bg": "#40a9ff",
      "input-number-handler-bg": "#fff",
      "input-number-handler-border-color": "#d9d9d9",
      "input-addon-bg": "#fafafa",
      "input-hover-border-color": "#40a9ff",
      "input-disabled-bg": "#f5f5f5",
      "input-outline-offset": "0 0",
      "input-icon-hover-color": "rgba(0, 0, 0, 0.85)",
      "input-disabled-color": "rgba(0, 0, 0, 0.25)",
      "mentions-dropdown-bg": "#fff",
      "mentions-dropdown-menu-item-hover-bg": "#fff",
      "select-border-color": "#d9d9d9",
      "select-item-selected-color": "rgba(0, 0, 0, 0.85)",
      "select-item-selected-font-weight": "600",
      "select-dropdown-bg": "#fff",
      "select-item-selected-bg": "#e6f7ff",
      "select-item-active-bg": "#f5f5f5",
      "select-dropdown-vertical-padding": "5px",
      "select-dropdown-font-size": "14px",
      "select-dropdown-line-height": "22px",
      "select-dropdown-height": "32px",
      "select-background": "#fff",
      "select-clear-background": "#fff",
      "select-selection-item-bg": "#f5f5f5",
      "select-selection-item-border-color": "#f0f0f0",
      "select-single-item-height-lg": "40px",
      "select-multiple-item-height": "24px",
      "select-multiple-item-height-lg": "32px",
      "select-multiple-item-spacing-half": "2px",
      "select-multiple-disabled-background": "#f5f5f5",
      "select-multiple-item-disabled-color": "#bfbfbf",
      "select-multiple-item-disabled-border-color": "#d9d9d9",
      "cascader-bg": "#fff",
      "cascader-item-selected-bg": "#e6f7ff",
      "cascader-menu-bg": "#fff",
      "cascader-menu-border-color-split": "#f0f0f0",
      "cascader-dropdown-vertical-padding": "5px",
      "cascader-dropdown-edge-child-vertical-padding": "4px",
      "cascader-dropdown-font-size": "14px",
      "cascader-dropdown-line-height": "22px",
      "anchor-bg": "transparent",
      "anchor-border-color": "#f0f0f0",
      "anchor-link-top": "4px",
      "anchor-link-left": "16px",
      "anchor-link-padding": "4px 0 4px 16px",
      "tooltip-max-width": "250px",
      "tooltip-color": "#fff",
      "tooltip-bg": "rgba(0, 0, 0, 0.75)",
      "tooltip-arrow-width": "11.3137085px",
      "tooltip-distance": "14.3137085px",
      "tooltip-arrow-color": "rgba(0, 0, 0, 0.75)",
      "tooltip-border-radius": "2px",
      "popover-bg": "#fff",
      "popover-color": "rgba(0, 0, 0, 0.85)",
      "popover-min-width": "177px",
      "popover-min-height": "32px",
      "popover-arrow-width": "11.3137085px",
      "popover-arrow-color": "#fff",
      "popover-arrow-outer-color": "#fff",
      "popover-distance": "15.3137085px",
      "popover-padding-horizontal": "16px",
      "modal-header-padding-vertical": "16px",
      "modal-header-padding-horizontal": "24px",
      "modal-header-bg": "#fff",
      "modal-header-padding": "16px 24px",
      "modal-header-border-width": "1px",
      "modal-header-border-style": "solid",
      "modal-header-title-line-height": "22px",
      "modal-header-title-font-size": "16px",
      "modal-header-border-color-split": "#f0f0f0",
      "modal-header-close-size": "54px",
      "modal-content-bg": "#fff",
      "modal-heading-color": "rgba(0, 0, 0, 0.85)",
      "modal-close-color": "rgba(0, 0, 0, 0.45)",
      "modal-footer-bg": "transparent",
      "modal-footer-border-color-split": "#f0f0f0",
      "modal-footer-border-style": "solid",
      "modal-footer-padding-vertical": "10px",
      "modal-footer-padding-horizontal": "16px",
      "modal-footer-border-width": "1px",
      "modal-mask-bg": "rgba(0, 0, 0, 0.45)",
      "modal-confirm-title-font-size": "16px",
      "modal-border-radius": "2px",
      "progress-default-color": "#1890ff",
      "progress-remaining-color": "#f5f5f5",
      "progress-info-text-color": "rgba(0, 0, 0, 0.85)",
      "progress-radius": "100px",
      "progress-steps-item-bg": "#f3f3f3",
      "progress-text-font-size": "1em",
      "progress-text-color": "rgba(0, 0, 0, 0.85)",
      "progress-circle-text-font-size": "1em",
      "menu-inline-toplevel-item-height": "40px",
      "menu-item-height": "40px",
      "menu-item-group-height": "1.5715",
      "menu-collapsed-width": "80px",
      "menu-bg": "#fff",
      "menu-popup-bg": "#fff",
      "menu-item-color": "rgba(0, 0, 0, 0.85)",
      "menu-inline-submenu-bg": "#fafafa",
      "menu-highlight-color": "#1890ff",
      "menu-highlight-danger-color": "#ff4d4f",
      "menu-item-active-bg": "#e6f7ff",
      "menu-item-active-danger-bg": "#fff1f0",
      "menu-item-active-border-width": "3px",
      "menu-item-group-title-color": "rgba(0, 0, 0, 0.45)",
      "menu-item-vertical-margin": "4px",
      "menu-item-font-size": "14px",
      "menu-item-boundary-margin": "8px",
      "menu-item-padding-horizontal": "20px",
      "menu-item-padding": "0 20px",
      "menu-horizontal-line-height": "46px",
      "menu-icon-margin-right": "10px",
      "menu-icon-size": "14px",
      "menu-icon-size-lg": "16px",
      "menu-item-group-title-font-size": "14px",
      "menu-dark-color": "rgba(255, 255, 255, 0.65)",
      "menu-dark-danger-color": "#ff4d4f",
      "menu-dark-bg": "#001529",
      "menu-dark-arrow-color": "#fff",
      "menu-dark-inline-submenu-bg": "#000c17",
      "menu-dark-highlight-color": "#fff",
      "menu-dark-item-active-bg": "#1890ff",
      "menu-dark-item-active-danger-bg": "#ff4d4f",
      "menu-dark-selected-item-icon-color": "#fff",
      "menu-dark-selected-item-text-color": "#fff",
      "menu-dark-item-hover-bg": "transparent",
      "spin-dot-size-sm": "14px",
      "spin-dot-size": "20px",
      "spin-dot-size-lg": "32px",
      "table-bg": "#fff",
      "table-header-bg": "#fafafa",
      "table-header-color": "rgba(0, 0, 0, 0.85)",
      "table-header-sort-bg": "#f5f5f5",
      "table-row-hover-bg": "#fafafa",
      "table-selected-row-color": "inherit",
      "table-selected-row-bg": "#e6f7ff",
      "table-selected-row-hover-bg": "#dcf4ff",
      "table-expanded-row-bg": "#fbfbfb",
      "table-padding-vertical": "16px",
      "table-padding-horizontal": "16px",
      "table-padding-vertical-md": "12px",
      "table-padding-horizontal-md": "8px",
      "table-padding-vertical-sm": "8px",
      "table-padding-horizontal-sm": "8px",
      "table-border-color": "#f0f0f0",
      "table-border-radius-base": "2px",
      "table-footer-bg": "#fafafa",
      "table-footer-color": "rgba(0, 0, 0, 0.85)",
      "table-header-bg-sm": "#fafafa",
      "table-font-size": "14px",
      "table-font-size-md": "14px",
      "table-font-size-sm": "14px",
      "table-header-cell-split-color": "rgba(0, 0, 0, 0.06)",
      "table-header-sort-active-bg": "rgba(0, 0, 0, 0.04)",
      "table-fixed-header-sort-active-bg": "#f5f5f5",
      "table-header-filter-active-bg": "rgba(0, 0, 0, 0.04)",
      "table-filter-btns-bg": "inherit",
      "table-filter-dropdown-bg": "#fff",
      "table-expand-icon-bg": "#fff",
      "table-selection-column-width": "32px",
      "table-sticky-scroll-bar-bg": "rgba(0, 0, 0, 0.35)",
      "table-sticky-scroll-bar-radius": "4px",
      "tag-border-radius": "2px",
      "tag-default-bg": "#fafafa",
      "tag-default-color": "rgba(0, 0, 0, 0.85)",
      "tag-font-size": "12px",
      "tag-line-height": "20px",
      "picker-bg": "#fff",
      "picker-basic-cell-hover-color": "#f5f5f5",
      "picker-basic-cell-active-with-range-color": "#e6f7ff",
      "picker-basic-cell-hover-with-range-color": "#cbe6ff",
      "picker-basic-cell-disabled-bg": "rgba(0, 0, 0, 0.04)",
      "picker-border-color": "#f0f0f0",
      "picker-date-hover-range-border-color": "#7ec1ff",
      "picker-date-hover-range-color": "#cbe6ff",
      "picker-time-panel-column-width": "56px",
      "picker-time-panel-column-height": "224px",
      "picker-time-panel-cell-height": "28px",
      "picker-panel-cell-height": "24px",
      "picker-panel-cell-width": "36px",
      "picker-text-height": "40px",
      "picker-panel-without-time-cell-height": "66px",
      "calendar-bg": "#fff",
      "calendar-input-bg": "#fff",
      "calendar-border-color": "#fff",
      "calendar-item-active-bg": "#e6f7ff",
      "calendar-column-active-bg": "rgba(230, 247, 255, 0.2)",
      "calendar-full-bg": "#fff",
      "calendar-full-panel-bg": "#fff",
      "carousel-dot-width": "16px",
      "carousel-dot-height": "3px",
      "carousel-dot-active-width": "24px",
      "badge-height": "20px",
      "badge-height-sm": "14px",
      "badge-dot-size": "6px",
      "badge-font-size": "12px",
      "badge-font-size-sm": "12px",
      "badge-font-weight": "normal",
      "badge-status-size": "6px",
      "badge-text-color": "#fff",
      "badge-color": "#ff4d4f",
      "rate-star-color": "#fadb14",
      "rate-star-bg": "#f0f0f0",
      "rate-star-size": "20px",
      "rate-star-hover-scale": "scale(1.1)",
      "card-head-color": "rgba(0, 0, 0, 0.85)",
      "card-head-background": "transparent",
      "card-head-font-size": "16px",
      "card-head-font-size-sm": "14px",
      "card-head-padding": "16px",
      "card-head-padding-sm": "8px",
      "card-head-height": "48px",
      "card-head-height-sm": "36px",
      "card-inner-head-padding": "12px",
      "card-padding-base": "24px",
      "card-padding-base-sm": "12px",
      "card-actions-background": "#fff",
      "card-actions-li-margin": "12px 0",
      "card-skeleton-bg": "#cfd8dc",
      "card-background": "#fff",
      "card-shadow": "0 1px 2px -2px rgba(0, 0, 0, 0.16), 0 3px 6px 0 rgba(0, 0, 0, 0.12), 0 5px 12px 4px rgba(0, 0, 0, 0.09)",
      "card-radius": "2px",
      "card-head-tabs-margin-bottom": "-17px",
      "card-head-extra-color": "rgba(0, 0, 0, 0.85)",
      "comment-bg": "inherit",
      "comment-padding-base": "16px 0",
      "comment-nest-indent": "44px",
      "comment-font-size-base": "14px",
      "comment-font-size-sm": "12px",
      "comment-author-name-color": "rgba(0, 0, 0, 0.45)",
      "comment-author-time-color": "#ccc",
      "comment-action-color": "rgba(0, 0, 0, 0.45)",
      "comment-action-hover-color": "#595959",
      "comment-actions-margin-bottom": "inherit",
      "comment-actions-margin-top": "12px",
      "comment-content-detail-p-margin-bottom": "inherit",
      "tabs-card-head-background": "#fafafa",
      "tabs-card-height": "40px",
      "tabs-card-active-color": "#1890ff",
      "tabs-card-horizontal-padding": "8px 16px",
      "tabs-card-horizontal-padding-sm": "6px 16px",
      "tabs-card-horizontal-padding-lg": "7px 16px 6px",
      "tabs-title-font-size": "14px",
      "tabs-title-font-size-lg": "16px",
      "tabs-title-font-size-sm": "14px",
      "tabs-ink-bar-color": "#1890ff",
      "tabs-bar-margin": "0 0 16px 0",
      "tabs-horizontal-gutter": "32px",
      "tabs-horizontal-margin": "0 0 0 32px",
      "tabs-horizontal-margin-rtl": "0 0 0 32px",
      "tabs-horizontal-padding": "12px 0",
      "tabs-horizontal-padding-lg": "16px 0",
      "tabs-horizontal-padding-sm": "8px 0",
      "tabs-vertical-padding": "8px 24px",
      "tabs-vertical-margin": "16px 0 0 0",
      "tabs-scrolling-size": "32px",
      "tabs-highlight-color": "#1890ff",
      "tabs-hover-color": "#40a9ff",
      "tabs-active-color": "#096dd9",
      "tabs-card-gutter": "2px",
      "tabs-card-tab-active-border-top": "2px solid transparent",
      "back-top-color": "#fff",
      "back-top-bg": "rgba(0, 0, 0, 0.45)",
      "back-top-hover-bg": "rgba(0, 0, 0, 0.85)",
      "avatar-size-base": "32px",
      "avatar-size-lg": "40px",
      "avatar-size-sm": "24px",
      "avatar-font-size-base": "18px",
      "avatar-font-size-lg": "24px",
      "avatar-font-size-sm": "14px",
      "avatar-bg": "#ccc",
      "avatar-color": "#fff",
      "avatar-border-radius": "2px",
      "avatar-group-overlapping": "-8px",
      "avatar-group-space": "3px",
      "avatar-group-border-color": "#fff",
      "switch-height": "22px",
      "switch-sm-height": "16px",
      "switch-min-width": "44px",
      "switch-sm-min-width": "28px",
      "switch-disabled-opacity": "0.4",
      "switch-color": "#1890ff",
      "switch-bg": "#fff",
      "switch-shadow-color": "rgba(0, 35, 11, 0.2)",
      "switch-padding": "2px",
      "switch-inner-margin-min": "7px",
      "switch-inner-margin-max": "25px",
      "switch-sm-inner-margin-min": "5px",
      "switch-sm-inner-margin-max": "18px",
      "pagination-item-bg": "#fff",
      "pagination-item-size": "32px",
      "pagination-item-size-sm": "24px",
      "pagination-font-family": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "pagination-font-weight-active": "500",
      "pagination-item-bg-active": "#fff",
      "pagination-item-link-bg": "#fff",
      "pagination-item-disabled-color-active": "rgba(0, 0, 0, 0.25)",
      "pagination-item-disabled-bg-active": "#e6e6e6",
      "pagination-item-input-bg": "#fff",
      "pagination-mini-options-size-changer-top": "0px",
      "page-header-padding": "24px",
      "page-header-padding-vertical": "16px",
      "page-header-padding-breadcrumb": "12px",
      "page-header-content-padding-vertical": "12px",
      "page-header-back-color": "#000",
      "page-header-ghost-bg": "inherit",
      "page-header-heading-title": "20px",
      "page-header-heading-sub-title": "14px",
      "page-header-tabs-tab-font-size": "16px",
      "breadcrumb-base-color": "rgba(0, 0, 0, 0.45)",
      "breadcrumb-last-item-color": "rgba(0, 0, 0, 0.85)",
      "breadcrumb-font-size": "14px",
      "breadcrumb-icon-font-size": "14px",
      "breadcrumb-link-color": "rgba(0, 0, 0, 0.45)",
      "breadcrumb-link-color-hover": "rgba(0, 0, 0, 0.85)",
      "breadcrumb-separator-color": "rgba(0, 0, 0, 0.45)",
      "breadcrumb-separator-margin": "0 8px",
      "slider-margin": "10px 6px 10px",
      "slider-rail-background-color": "#f5f5f5",
      "slider-rail-background-color-hover": "#e1e1e1",
      "slider-track-background-color": "#91d5ff",
      "slider-track-background-color-hover": "#69c0ff",
      "slider-handle-border-width": "2px",
      "slider-handle-background-color": "#fff",
      "slider-handle-color": "#91d5ff",
      "slider-handle-color-hover": "#69c0ff",
      "slider-handle-color-focus": "#46a6ff",
      "slider-handle-color-focus-shadow": "rgba(24, 144, 255, 0.12)",
      "slider-handle-color-tooltip-open": "#1890ff",
      "slider-handle-size": "14px",
      "slider-handle-margin-top": "-5px",
      "slider-handle-shadow": "0",
      "slider-dot-border-color": "#f0f0f0",
      "slider-dot-border-color-active": "#8cc8ff",
      "slider-disabled-color": "rgba(0, 0, 0, 0.25)",
      "slider-disabled-background-color": "#fff",
      "tree-bg": "#fff",
      "tree-title-height": "24px",
      "tree-child-padding": "18px",
      "tree-directory-selected-color": "#fff",
      "tree-directory-selected-bg": "#1890ff",
      "tree-node-hover-bg": "#f5f5f5",
      "tree-node-selected-bg": "#bae7ff",
      "collapse-header-padding": "12px 16px",
      "collapse-header-padding-extra": "40px",
      "collapse-header-bg": "#fafafa",
      "collapse-content-padding": "16px",
      "collapse-content-bg": "#fff",
      "collapse-header-arrow-left": "16px",
      "skeleton-color": "rgba(190, 190, 190, 0.2)",
      "skeleton-to-color": "rgba(129, 129, 129, 0.24)",
      "skeleton-paragraph-margin-top": "28px",
      "skeleton-paragraph-li-margin-top": "16px",
      "skeleton-paragraph-li-height": "16px",
      "skeleton-title-height": "16px",
      "skeleton-title-paragraph-margin-top": "24px",
      "transfer-header-height": "40px",
      "transfer-item-height": "32px",
      "transfer-disabled-bg": "#f5f5f5",
      "transfer-list-height": "200px",
      "transfer-item-hover-bg": "#f5f5f5",
      "transfer-item-selected-hover-bg": "#dcf4ff",
      "transfer-item-padding-vertical": "6px",
      "transfer-list-search-icon-top": "12px",
      "message-notice-content-padding": "10px 16px",
      "message-notice-content-bg": "#fff",
      "wave-animation-width": "6px",
      "alert-success-border-color": "#b7eb8f",
      "alert-success-bg-color": "#f6ffed",
      "alert-success-icon-color": "#52c41a",
      "alert-info-border-color": "#91d5ff",
      "alert-info-bg-color": "#e6f7ff",
      "alert-info-icon-color": "#1890ff",
      "alert-warning-border-color": "#ffe58f",
      "alert-warning-bg-color": "#fffbe6",
      "alert-warning-icon-color": "#faad14",
      "alert-error-border-color": "#ffccc7",
      "alert-error-bg-color": "#fff2f0",
      "alert-error-icon-color": "#ff4d4f",
      "alert-message-color": "rgba(0, 0, 0, 0.85)",
      "alert-text-color": "rgba(0, 0, 0, 0.85)",
      "alert-close-color": "rgba(0, 0, 0, 0.45)",
      "alert-close-hover-color": "rgba(0, 0, 0, 0.75)",
      "alert-no-icon-padding-vertical": "8px",
      "alert-with-description-no-icon-padding-vertical": "15px",
      "alert-with-description-padding-vertical": "15px",
      "alert-with-description-padding": "15px 15px 15px 24px",
      "alert-icon-top": "12.0005px",
      "alert-with-description-icon-size": "24px",
      "list-header-background": "transparent",
      "list-footer-background": "transparent",
      "list-empty-text-padding": "16px",
      "list-item-padding": "12px 0",
      "list-item-padding-sm": "8px 16px",
      "list-item-padding-lg": "16px 24px",
      "list-item-meta-margin-bottom": "16px",
      "list-item-meta-avatar-margin-right": "16px",
      "list-item-meta-title-margin-bottom": "12px",
      "list-customize-card-bg": "#fff",
      "list-item-meta-description-font-size": "14px",
      "statistic-title-font-size": "14px",
      "statistic-content-font-size": "24px",
      "statistic-unit-font-size": "24px",
      "statistic-font-family": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "drawer-header-padding": "16px 24px",
      "drawer-bg": "#fff",
      "drawer-footer-padding-vertical": "10px",
      "drawer-footer-padding-horizontal": "16px",
      "drawer-header-close-size": "56px",
      "drawer-title-font-size": "16px",
      "drawer-title-line-height": "22px",
      "timeline-width": "2px",
      "timeline-color": "#f0f0f0",
      "timeline-dot-border-width": "2px",
      "timeline-dot-color": "#1890ff",
      "timeline-dot-bg": "#fff",
      "timeline-item-padding-bottom": "20px",
      "typography-title-font-weight": "600",
      "typography-title-margin-top": "1.2em",
      "typography-title-margin-bottom": "0.5em",
      "upload-actions-color": "rgba(0, 0, 0, 0.45)",
      "process-tail-color": "#f0f0f0",
      "steps-nav-arrow-color": "rgba(0, 0, 0, 0.25)",
      "steps-background": "#fff",
      "steps-icon-size": "32px",
      "steps-icon-custom-size": "32px",
      "steps-icon-custom-top": "0px",
      "steps-icon-custom-font-size": "24px",
      "steps-icon-top": "-0.5px",
      "steps-icon-font-size": "16px",
      "steps-icon-margin": "0 8px 0 0",
      "steps-title-line-height": "32px",
      "steps-small-icon-size": "24px",
      "steps-small-icon-margin": "0 8px 0 0",
      "steps-dot-size": "8px",
      "steps-dot-top": "2px",
      "steps-current-dot-size": "10px",
      "steps-description-max-width": "140px",
      "steps-nav-content-max-width": "auto",
      "steps-vertical-icon-width": "16px",
      "steps-vertical-tail-width": "16px",
      "steps-vertical-tail-width-sm": "12px",
      "notification-bg": "#fff",
      "notification-padding-vertical": "16px",
      "notification-padding-horizontal": "24px",
      "result-title-font-size": "24px",
      "result-subtitle-font-size": "14px",
      "result-icon-font-size": "72px",
      "result-extra-margin": "24px 0 0 0",
      "image-size-base": "48px",
      "image-font-size-base": "24px",
      "image-bg": "#f5f5f5",
      "image-color": "#fff",
      "image-mask-font-size": "16px",
      "image-preview-operation-size": "18px",
      "image-preview-operation-color": "rgba(255, 255, 255, 0.85)",
      "image-preview-operation-disabled-color": "rgba(255, 255, 255, 0.25)",
      "segmented-bg": "rgba(0, 0, 0, 0.04)",
      "segmented-hover-bg": "rgba(0, 0, 0, 0.06)",
      "segmented-selected-bg": "#fff",
      "segmented-label-color": "rgba(0, 0, 0, 0.65)",
      "segmented-label-hover-color": "#262626"
    },
    "define": {
      "ANT_DESIGN_PRO_ONLY_DO_NOT_USE_IN_YOUR_PRODUCTION": "",
      "REACT_APP_ENV": false
    }
  },
  "routes": {
    "1": {
      "path": "/user",
      "layout": false,
      "id": "1",
      "absPath": "/user"
    },
    "2": {
      "name": "login",
      "path": "/user/login",
      "file": "@/pages/user/login/index.tsx",
      "parentId": "1",
      "id": "2",
      "absPath": "/user/login",
      "__content": "import {\n  AlipayCircleOutlined,\n  LockOutlined,\n  MobileOutlined,\n  TaobaoCircleOutlined,\n  UserOutlined,\n  WeiboCircleOutlined,\n} from '@ant-design/icons';\nimport {\n  LoginForm,\n  ProFormCaptcha,\n  ProFormCheckbox,\n  ProFormText,\n} from '@ant-design/pro-components';\nimport {\n  FormattedMessage,\n  Helmet,\n  Link,\n  SelectLang,\n  useIntl,\n  useModel,\n  history,\n} from '@umijs/max';\nimport { Alert, App, Button, Tabs } from 'antd';\nimport { createStyles } from 'antd-style';\nimport React, { useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport { Footer } from '@/components';\nimport { login } from '@/services/ant-design-pro/api';\nimport { getFakeCaptcha } from '@/services/ant-design-pro/login';\nimport { tokenUtils } from '@/utils/token';\nimport Settings from '../../../../config/defaultSettings';\n\nconst useStyles = createStyles(({ token }) => {\n  return {\n    action: {\n      marginLeft: '8px',\n      color: 'rgba(0, 0, 0, 0.2)',\n      fontSize: '24px',\n      verticalAlign: 'middle',\n      cursor: 'pointer',\n      transition: 'color 0.3s',\n      '&:hover': {\n        color: token.colorPrimaryActive,\n      },\n    },\n    lang: {\n      width: 42,\n      height: 42,\n      lineHeight: '42px',\n      position: 'fixed',\n      right: 16,\n      borderRadius: token.borderRadius,\n      ':hover': {\n        backgroundColor: token.colorBgTextHover,\n      },\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      overflow: 'auto',\n      backgroundImage:\n        \"url('https://mdn.alipayobjects.com/yuyan_qk0oxh/afts/img/V-_oS6r-i7wAAAAAAAAAAAAAFl94AQBr')\",\n      backgroundSize: '100% 100%',\n    },\n  };\n});\n\nconst ActionIcons = () => {\n  const { styles } = useStyles();\n\n  return (\n    <>\n      <AlipayCircleOutlined\n        key=\"AlipayCircleOutlined\"\n        className={styles.action}\n      />\n      <TaobaoCircleOutlined\n        key=\"TaobaoCircleOutlined\"\n        className={styles.action}\n      />\n      <WeiboCircleOutlined\n        key=\"WeiboCircleOutlined\"\n        className={styles.action}\n      />\n    </>\n  );\n};\n\nconst Lang = () => {\n  const { styles } = useStyles();\n\n  return (\n    <div className={styles.lang} data-lang>\n      {SelectLang && <SelectLang />}\n    </div>\n  );\n};\n\nconst LoginMessage: React.FC<{\n  content: string;\n}> = ({ content }) => {\n  return (\n    <Alert\n      style={{\n        marginBottom: 24,\n      }}\n      message={content}\n      type=\"error\"\n      showIcon\n    />\n  );\n};\n\nconst Login: React.FC = () => {\n  const [userLoginState, setUserLoginState] = useState<API.LoginResult>({});\n  const [type, setType] = useState<string>('account');\n  const { initialState, setInitialState } = useModel('@@initialState');\n  const { styles } = useStyles();\n  const { message } = App.useApp();\n  const intl = useIntl();\n\n  const fetchUserInfo = async () => {\n    const userInfo = await initialState?.fetchUserInfo?.();\n    if (userInfo) {\n      flushSync(() => {\n        setInitialState((s) => ({\n          ...s,\n          currentUser: userInfo,\n        }));\n      });\n    }\n  };\n\n  const handleSubmit = async (values: API.LoginParams) => {\n    try {\n      // 登录\n      const response = await login({ ...values, type });\n\n      // 处理统一的 API 响应格式\n      if (response.success && response.data) {\n        const msg = response.data;\n\n        // 保存 token 和刷新token到本地存储\n        if (msg.token && msg.refreshToken) {\n          const expiresAt = msg.expiresAt ? new Date(msg.expiresAt).getTime() : undefined;\n          tokenUtils.setTokens(msg.token, msg.refreshToken, expiresAt);\n        } else if (msg.token) {\n          // 兼容旧版本，只保存token\n          tokenUtils.setToken(msg.token);\n        }\n\n        const defaultLoginSuccessMessage = intl.formatMessage({\n          id: 'pages.login.success',\n          defaultMessage: '登录成功！',\n        });\n        message.success(defaultLoginSuccessMessage);\n        await fetchUserInfo();\n        \n        // 使用 UmiJS history 进行客户端路由跳转，保持 SPA 特性\n        const urlParams = new URL(window.location.href).searchParams;\n        const redirect = urlParams.get('redirect');\n        history.push(redirect || '/');\n        return;\n      }\n\n      // 如果失败，处理错误信息\n      const errorMsg = response.errorMessage || '登录失败，请重试！';\n      setUserLoginState({ status: 'error', errorMessage: errorMsg });\n    } catch (error) {\n      const defaultLoginFailureMessage = intl.formatMessage({\n        id: 'pages.login.failure',\n        defaultMessage: '登录失败，请重试！',\n      });\n      console.log(error);\n      message.error(defaultLoginFailureMessage);\n    }\n  };\n  const { status, type: loginType } = userLoginState;\n\n  return (\n    <div className={styles.container}>\n      <Helmet>\n        <title>\n          {intl.formatMessage({\n            id: 'menu.login',\n            defaultMessage: '登录页',\n          })}\n          {Settings.title && ` - ${Settings.title}`}\n        </title>\n      </Helmet>\n      <Lang />\n      <div\n        style={{\n          flex: '1',\n          padding: '32px 0',\n        }}\n      >\n        <LoginForm\n          contentStyle={{\n            minWidth: 280,\n            maxWidth: '75vw',\n          }}\n          logo={<img alt=\"logo\" src=\"/logo.svg\" />}\n          title=\"Ant Design\"\n          subTitle={intl.formatMessage({\n            id: 'pages.layouts.userLayout.title',\n          })}\n          initialValues={{\n            autoLogin: true,\n          }}\n          actions={[\n            <FormattedMessage\n              key=\"loginWith\"\n              id=\"pages.login.loginWith\"\n              defaultMessage=\"其他登录方式\"\n            />,\n            <ActionIcons key=\"icons\" />,\n          ]}\n          onFinish={async (values) => {\n            await handleSubmit(values as API.LoginParams);\n          }}\n        >\n          <Tabs\n            activeKey={type}\n            onChange={setType}\n            centered\n            items={[\n              {\n                key: 'account',\n                label: intl.formatMessage({\n                  id: 'pages.login.accountLogin.tab',\n                  defaultMessage: '账户密码登录',\n                }),\n              },\n              {\n                key: 'mobile',\n                label: intl.formatMessage({\n                  id: 'pages.login.phoneLogin.tab',\n                  defaultMessage: '手机号登录',\n                }),\n              },\n            ]}\n          />\n\n          {status === 'error' && loginType === 'account' && (\n            <LoginMessage\n              content={intl.formatMessage({\n                id: 'pages.login.accountLogin.errorMessage',\n                defaultMessage: '账户或密码错误',\n              })}\n            />\n          )}\n          {type === 'account' && (\n            <>\n              <ProFormText\n                name=\"username\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <UserOutlined />,\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.username.placeholder',\n                  defaultMessage: '用户名: admin or user',\n                })}\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.username.required\"\n                        defaultMessage=\"请输入用户名!\"\n                      />\n                    ),\n                  },\n                ]}\n              />\n              <ProFormText.Password\n                name=\"password\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <LockOutlined />,\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.password.placeholder',\n                  defaultMessage: '密码: ant.design',\n                })}\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.password.required\"\n                        defaultMessage=\"请输入密码！\"\n                      />\n                    ),\n                  },\n                ]}\n              />\n            </>\n          )}\n\n          {status === 'error' && loginType === 'mobile' && (\n            <LoginMessage content=\"验证码错误\" />\n          )}\n          {type === 'mobile' && (\n            <>\n              <ProFormText\n                fieldProps={{\n                  size: 'large',\n                  prefix: <MobileOutlined />,\n                }}\n                name=\"mobile\"\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.phoneNumber.placeholder',\n                  defaultMessage: '手机号',\n                })}\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.phoneNumber.required\"\n                        defaultMessage=\"请输入手机号！\"\n                      />\n                    ),\n                  },\n                  {\n                    pattern: /^1\\d{10}$/,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.phoneNumber.invalid\"\n                        defaultMessage=\"手机号格式错误！\"\n                      />\n                    ),\n                  },\n                ]}\n              />\n              <ProFormCaptcha\n                fieldProps={{\n                  size: 'large',\n                  prefix: <LockOutlined />,\n                }}\n                captchaProps={{\n                  size: 'large',\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.captcha.placeholder',\n                  defaultMessage: '请输入验证码',\n                })}\n                captchaTextRender={(timing, count) => {\n                  if (timing) {\n                    return `${count} ${intl.formatMessage({\n                      id: 'pages.getCaptchaSecondText',\n                      defaultMessage: '获取验证码',\n                    })}`;\n                  }\n                  return intl.formatMessage({\n                    id: 'pages.login.phoneLogin.getVerificationCode',\n                    defaultMessage: '获取验证码',\n                  });\n                }}\n                name=\"captcha\"\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.captcha.required\"\n                        defaultMessage=\"请输入验证码！\"\n                      />\n                    ),\n                  },\n                ]}\n                onGetCaptcha={async (phone) => {\n                  try {\n                    const result = await getFakeCaptcha({ phone });\n                    \n                    if (result.success && result.data) {\n                      // 开发环境显示验证码（生产环境应该发送短信）\n                      message.success(\n                        `验证码已生成：${result.data.captcha}（${result.data.expiresIn}秒内有效）`,\n                        5\n                      );\n                      console.log(`验证码: ${result.data.captcha}, 有效期: ${result.data.expiresIn}秒`);\n                    } else {\n                      message.error('获取验证码失败');\n                    }\n                  } catch (error) {\n                    message.error('获取验证码失败，请稍后重试');\n                    console.error('获取验证码错误:', error);\n                  }\n                }}\n              />\n            </>\n          )}\n          <div\n            style={{\n              marginBottom: 24,\n            }}\n          >\n            <ProFormCheckbox noStyle name=\"autoLogin\">\n              <FormattedMessage\n                id=\"pages.login.rememberMe\"\n                defaultMessage=\"自动登录\"\n              />\n            </ProFormCheckbox>\n            <Button\n              type=\"link\"\n              style={{\n                float: 'right',\n                padding: 0,\n                height: 'auto',\n              }}\n              disabled\n              onClick={() => {\n                // 忘记密码功能待实现\n                message.info('忘记密码功能开发中');\n              }}\n            >\n              <FormattedMessage\n                id=\"pages.login.forgotPassword\"\n                defaultMessage=\"忘记密码\"\n              />\n            </Button>\n            <div style={{ textAlign: 'center', marginTop: 16 }}>\n              <Link to=\"/user/register\">\n                <FormattedMessage\n                  id=\"pages.login.register\"\n                  defaultMessage=\"没有账号？立即注册\"\n                />\n              </Link>\n            </div>\n          </div>\n        </LoginForm>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Login;\n",
      "__isJSFile": true,
      "__absFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/pages/user/login/index.tsx"
    },
    "3": {
      "name": "register",
      "path": "/user/register",
      "file": "@/pages/user/register/index.tsx",
      "parentId": "1",
      "id": "3",
      "absPath": "/user/register",
      "__content": "import {\n  AlipayCircleOutlined,\n  LockOutlined,\n  MailOutlined,\n  TaobaoCircleOutlined,\n  UserOutlined,\n  WeiboCircleOutlined,\n} from '@ant-design/icons';\nimport {\n  LoginForm,\n  ProFormText,\n} from '@ant-design/pro-components';\nimport {\n  FormattedMessage,\n  Helmet,\n  SelectLang,\n  useIntl,\n  history,\n  Link,\n} from '@umijs/max';\nimport { Alert, App } from 'antd';\nimport { createStyles } from 'antd-style';\nimport React, { useState } from 'react';\nimport { Footer } from '@/components';\nimport { register } from '@/services/ant-design-pro/api';\nimport Settings from '../../../../config/defaultSettings';\n\nconst useStyles = createStyles(({ token }) => {\n  return {\n    action: {\n      marginLeft: '8px',\n      color: 'rgba(0, 0, 0, 0.2)',\n      fontSize: '24px',\n      verticalAlign: 'middle',\n      cursor: 'pointer',\n      transition: 'color 0.3s',\n      '&:hover': {\n        color: token.colorPrimaryActive,\n      },\n    },\n    lang: {\n      width: 42,\n      height: 42,\n      lineHeight: '42px',\n      position: 'fixed',\n      right: 16,\n      borderRadius: token.borderRadius,\n      ':hover': {\n        backgroundColor: token.colorBgTextHover,\n      },\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      overflow: 'auto',\n      backgroundImage:\n        \"url('https://mdn.alipayobjects.com/yuyan_qk0oxh/afts/img/V-_oS6r-i7wAAAAAAAAAAAAAFl94AQBr')\",\n      backgroundSize: '100% 100%',\n    },\n  };\n});\n\nconst ActionIcons = () => {\n  const { styles } = useStyles();\n\n  return (\n    <>\n      <AlipayCircleOutlined\n        key=\"AlipayCircleOutlined\"\n        className={styles.action}\n      />\n      <TaobaoCircleOutlined\n        key=\"TaobaoCircleOutlined\"\n        className={styles.action}\n      />\n      <WeiboCircleOutlined\n        key=\"WeiboCircleOutlined\"\n        className={styles.action}\n      />\n    </>\n  );\n};\n\nconst Lang = () => {\n  const { styles } = useStyles();\n\n  return (\n    <div className={styles.lang} data-lang>\n      {SelectLang && <SelectLang />}\n    </div>\n  );\n};\n\nconst RegisterMessage: React.FC<{\n  content: string;\n}> = ({ content }) => {\n  return (\n    <Alert\n      style={{\n        marginBottom: 24,\n      }}\n      message={content}\n      type=\"error\"\n      showIcon\n    />\n  );\n};\n\nconst Register: React.FC = () => {\n  const [registerState, setRegisterState] = useState<API.RegisterResult>({});\n  const { styles } = useStyles();\n  const { message } = App.useApp();\n  const intl = useIntl();\n\n  const handleSubmit = async (values: API.RegisterParams) => {\n    try {\n      // 注册\n      const result = await register(values);\n      if (result.success) {\n        const defaultRegisterSuccessMessage = intl.formatMessage({\n          id: 'pages.register.success',\n          defaultMessage: '注册成功！',\n        });\n        message.success(defaultRegisterSuccessMessage);\n        \n        // 注册成功后跳转到注册结果页面\n        history.push('/user/register-result');\n        return;\n      }\n      \n      // 如果失败去设置用户错误信息\n      setRegisterState(result);\n    } catch (error) {\n      const defaultRegisterFailureMessage = intl.formatMessage({\n        id: 'pages.register.failure',\n        defaultMessage: '注册失败，请重试！',\n      });\n      console.log(error);\n      message.error(defaultRegisterFailureMessage);\n    }\n  };\n\n  const { errorCode, errorMessage } = registerState;\n\n  return (\n    <div className={styles.container}>\n      <Helmet>\n        <title>\n          {intl.formatMessage({\n            id: 'menu.register',\n            defaultMessage: '注册页',\n          })}\n          {Settings.title && ` - ${Settings.title}`}\n        </title>\n      </Helmet>\n      <Lang />\n      <div\n        style={{\n          flex: '1',\n          padding: '32px 0',\n        }}\n      >\n        <LoginForm\n          contentStyle={{\n            minWidth: 280,\n            maxWidth: '75vw',\n          }}\n          logo={<img alt=\"logo\" src=\"/logo.svg\" />}\n          title=\"Ant Design\"\n          subTitle={intl.formatMessage({\n            id: 'pages.layouts.userLayout.title',\n          })}\n          actions={[\n            <FormattedMessage\n              key=\"registerWith\"\n              id=\"pages.register.registerWith\"\n              defaultMessage=\"其他注册方式\"\n            />,\n            <ActionIcons key=\"icons\" />,\n          ]}\n          onFinish={async (values) => {\n            await handleSubmit(values as API.RegisterParams);\n          }}\n          submitter={{\n            searchConfig: {\n              submitText: intl.formatMessage({\n                id: 'pages.register.submit',\n                defaultMessage: '注册',\n              }),\n            },\n          }}\n        >\n          {errorCode && (\n            <RegisterMessage content={errorMessage || '注册失败'} />\n          )}\n\n          <ProFormText\n            name=\"username\"\n            fieldProps={{\n              size: 'large',\n              prefix: <UserOutlined />,\n            }}\n            placeholder={intl.formatMessage({\n              id: 'pages.register.username.placeholder',\n              defaultMessage: '用户名',\n            })}\n            rules={[\n              {\n                required: true,\n                message: (\n                  <FormattedMessage\n                    id=\"pages.register.username.required\"\n                    defaultMessage=\"请输入用户名!\"\n                  />\n                ),\n              },\n              {\n                min: 3,\n                max: 20,\n                message: (\n                  <FormattedMessage\n                    id=\"pages.register.username.length\"\n                    defaultMessage=\"用户名长度必须在3-20个字符之间\"\n                  />\n                ),\n              },\n            ]}\n          />\n\n          <ProFormText.Password\n            name=\"password\"\n            fieldProps={{\n              size: 'large',\n              prefix: <LockOutlined />,\n            }}\n            placeholder={intl.formatMessage({\n              id: 'pages.register.password.placeholder',\n              defaultMessage: '密码',\n            })}\n            rules={[\n              {\n                required: true,\n                message: (\n                  <FormattedMessage\n                    id=\"pages.register.password.required\"\n                    defaultMessage=\"请输入密码！\"\n                  />\n                ),\n              },\n              {\n                min: 6,\n                message: (\n                  <FormattedMessage\n                    id=\"pages.register.password.length\"\n                    defaultMessage=\"密码长度至少6个字符\"\n                  />\n                ),\n              },\n            ]}\n          />\n\n          <ProFormText\n            name=\"email\"\n            fieldProps={{\n              size: 'large',\n              prefix: <MailOutlined />,\n            }}\n            placeholder={intl.formatMessage({\n              id: 'pages.register.email.placeholder',\n              defaultMessage: '邮箱（可选）',\n            })}\n            rules={[\n              {\n                type: 'email',\n                message: (\n                  <FormattedMessage\n                    id=\"pages.register.email.invalid\"\n                    defaultMessage=\"邮箱格式不正确！\"\n                  />\n                ),\n              },\n            ]}\n          />\n\n          <div\n            style={{\n              marginBottom: 24,\n              textAlign: 'center',\n            }}\n          >\n            <Link to=\"/user/login\">\n              <FormattedMessage\n                id=\"pages.register.backToLogin\"\n                defaultMessage=\"已有账号？立即登录\"\n              />\n            </Link>\n          </div>\n        </LoginForm>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Register;\n",
      "__isJSFile": true,
      "__absFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/pages/user/register/index.tsx"
    },
    "4": {
      "name": "register-result",
      "path": "/user/register-result",
      "file": "@/pages/user/register-result/index.tsx",
      "parentId": "1",
      "id": "4",
      "absPath": "/user/register-result",
      "__content": "import { CheckCircleOutlined } from '@ant-design/icons';\nimport { Result, Button } from 'antd';\nimport { FormattedMessage, history, useIntl } from '@umijs/max';\nimport { createStyles } from 'antd-style';\nimport React from 'react';\n\nconst useStyles = createStyles(({ token }) => {\n  return {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      overflow: 'auto',\n      backgroundImage:\n        \"url('https://mdn.alipayobjects.com/yuyan_qk0oxh/afts/img/V-_oS6r-i7wAAAAAAAAAAAAAFl94AQBr')\",\n      backgroundSize: '100% 100%',\n    },\n    content: {\n      flex: '1',\n      padding: '32px 0',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  };\n});\n\nconst RegisterResult: React.FC = () => {\n  const { styles } = useStyles();\n  const intl = useIntl();\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <Result\n          icon={<CheckCircleOutlined style={{ color: '#52c41a' }} />}\n          title={intl.formatMessage({\n            id: 'pages.register.result.title',\n            defaultMessage: '注册成功',\n          })}\n          subTitle={intl.formatMessage({\n            id: 'pages.register.result.subtitle',\n            defaultMessage: '恭喜您，账号注册成功！',\n          })}\n          extra={[\n            <Button\n              type=\"primary\"\n              key=\"login\"\n              onClick={() => {\n                history.push('/user/login');\n              }}\n            >\n              <FormattedMessage\n                id=\"pages.register.result.login\"\n                defaultMessage=\"立即登录\"\n              />\n            </Button>,\n            <Button\n              key=\"home\"\n              onClick={() => {\n                history.push('/');\n              }}\n            >\n              <FormattedMessage\n                id=\"pages.register.result.home\"\n                defaultMessage=\"返回首页\"\n              />\n            </Button>,\n          ]}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterResult;\n",
      "__isJSFile": true,
      "__absFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/pages/user/register-result/index.tsx"
    },
    "5": {
      "path": "/welcome",
      "name": "welcome",
      "icon": "smile",
      "file": "@/pages/Welcome.tsx",
      "parentId": "ant-design-pro-layout",
      "id": "5",
      "absPath": "/welcome",
      "__content": "import { PageContainer } from '@ant-design/pro-components';\nimport { useModel } from '@umijs/max';\nimport { Card, theme } from 'antd';\nimport React from 'react';\n\n/**\n * 每个单独的卡片，为了复用样式抽成了组件\n * @param param0\n * @returns\n */\nconst InfoCard: React.FC<{\n  title: string;\n  index: number;\n  desc: string;\n  href: string;\n}> = ({ title, href, index, desc }) => {\n  const { useToken } = theme;\n\n  const { token } = useToken();\n\n  return (\n    <div\n      style={{\n        backgroundColor: token.colorBgContainer,\n        boxShadow: token.boxShadow,\n        borderRadius: '8px',\n        fontSize: '14px',\n        color: token.colorTextSecondary,\n        lineHeight: '22px',\n        padding: '16px 19px',\n        minWidth: '220px',\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          gap: '4px',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          style={{\n            width: 48,\n            height: 48,\n            lineHeight: '22px',\n            backgroundSize: '100%',\n            textAlign: 'center',\n            padding: '8px 16px 16px 12px',\n            color: '#FFF',\n            fontWeight: 'bold',\n            backgroundImage:\n              \"url('https://gw.alipayobjects.com/zos/bmw-prod/daaf8d50-8e6d-4251-905d-676a24ddfa12.svg')\",\n          }}\n        >\n          {index}\n        </div>\n        <div\n          style={{\n            fontSize: '16px',\n            color: token.colorText,\n            paddingBottom: 8,\n          }}\n        >\n          {title}\n        </div>\n      </div>\n      <div\n        style={{\n          fontSize: '14px',\n          color: token.colorTextSecondary,\n          textAlign: 'justify',\n          lineHeight: '22px',\n          marginBottom: 8,\n        }}\n      >\n        {desc}\n      </div>\n      <a href={href} target=\"_blank\" rel=\"noreferrer\">\n        了解更多 {'>'}\n      </a>\n    </div>\n  );\n};\n\nconst Welcome: React.FC = () => {\n  const { token } = theme.useToken();\n  const { initialState } = useModel('@@initialState');\n  return (\n    <PageContainer>\n      <Card\n        style={{\n          borderRadius: 8,\n        }}\n        styles={{\n          body: {\n            backgroundImage:\n              initialState?.settings?.navTheme === 'realDark'\n                ? 'background-image: linear-gradient(75deg, #1A1B1F 0%, #191C1F 100%)'\n                : 'background-image: linear-gradient(75deg, #FBFDFF 0%, #F5F7FF 100%)',\n          },\n        }}\n      >\n        <div\n          style={{\n            backgroundPosition: '100% -30%',\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: '274px auto',\n            backgroundImage:\n              \"url('https://gw.alipayobjects.com/mdn/rms_a9745b/afts/img/A*BuFmQqsB2iAAAAAAAAAAAAAAARQnAQ')\",\n          }}\n        >\n          <div\n            style={{\n              fontSize: '20px',\n              color: token.colorTextHeading,\n            }}\n          >\n            欢迎使用 Ant Design Pro\n          </div>\n          <p\n            style={{\n              fontSize: '14px',\n              color: token.colorTextSecondary,\n              lineHeight: '22px',\n              marginTop: 16,\n              marginBottom: 32,\n              width: '65%',\n            }}\n          >\n            Ant Design Pro 是一个整合了 umi，Ant Design 和 ProComponents\n            的脚手架方案。致力于在设计规范和基础组件的基础上，继续向上构建，提炼出典型模板/业务组件/配套设计资源，进一步提升企业级中后台产品设计研发过程中的『用户』和『设计者』的体验。\n          </p>\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 16,\n            }}\n          >\n            <InfoCard\n              index={1}\n              href=\"https://umijs.org/docs/introduce/introduce\"\n              title=\"了解 umi\"\n              desc=\"umi 是一个可扩展的企业级前端应用框架,umi 以路由为基础的，同时支持配置式路由和约定式路由，保证路由的功能完备，并以此进行功能扩展。\"\n            />\n            <InfoCard\n              index={2}\n              title=\"了解 ant design\"\n              href=\"https://ant.design\"\n              desc=\"antd 是基于 Ant Design 设计体系的 React UI 组件库，主要用于研发企业级中后台产品。\"\n            />\n            <InfoCard\n              index={3}\n              title=\"了解 Pro Components\"\n              href=\"https://procomponents.ant.design\"\n              desc=\"ProComponents 是一个基于 Ant Design 做了更高抽象的模板组件，以 一个组件就是一个页面为开发理念，为中后台开发带来更好的体验。\"\n            />\n          </div>\n        </div>\n      </Card>\n    </PageContainer>\n  );\n};\n\nexport default Welcome;\n",
      "__isJSFile": true,
      "__absFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/pages/Welcome.tsx"
    },
    "6": {
      "name": "system",
      "icon": "setting",
      "path": "/system",
      "parentId": "ant-design-pro-layout",
      "id": "6",
      "absPath": "/system"
    },
    "7": {
      "path": "/system",
      "redirect": "/system/user-management",
      "parentId": "6",
      "id": "7",
      "absPath": "/system"
    },
    "8": {
      "name": "user-management",
      "icon": "user",
      "path": "/system/user-management",
      "file": "@/pages/user-management/index.tsx",
      "parentId": "6",
      "id": "8",
      "absPath": "/system/user-management",
      "__content": "import React, { useRef, useState } from 'react';\nimport type { ActionType, ProColumns } from '@ant-design/pro-components';\nimport {\n  PageContainer,\n  ProTable,\n  ProCard,\n} from '@ant-design/pro-components';\nimport {\n  Button,\n  Tag,\n  Space,\n  Popconfirm,\n  message,\n  Modal,\n  Select,\n  Switch,\n  Drawer,\n  Statistic,\n  Row,\n  Col,\n  Badge,\n  Form,\n  Input,\n  Card,\n  Dropdown,\n  DatePicker,\n} from 'antd';\nimport type { MenuProps } from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  UserOutlined,\n  TeamOutlined,\n  CheckCircleOutlined,\n  EyeOutlined,\n  ReloadOutlined,\n  MoreOutlined,\n  KeyOutlined,\n} from '@ant-design/icons';\nimport { request } from '@umijs/max';\nimport { getAllRoles } from '@/services/role/api';\nimport type { AppUser, UserListRequest, UserStatisticsResponse } from './types';\nimport UserForm from './components/UserForm';\nimport UserDetail from './components/UserDetail';\nimport UserPermissionModal from './components/UserPermissionModal';\nimport PermissionControl from '@/components/PermissionControl';\n\nconst UserManagement: React.FC = () => {\n  const actionRef = useRef<ActionType>(null);\n  const [searchForm] = Form.useForm();\n  const [selectedRows, setSelectedRows] = useState<AppUser[]>([]);\n  const [formVisible, setFormVisible] = useState(false);\n  const [detailVisible, setDetailVisible] = useState(false);\n  const [permissionModalVisible, setPermissionModalVisible] = useState(false);\n  const [editingUser, setEditingUser] = useState<AppUser | null>(null);\n  const [viewingUser, setViewingUser] = useState<AppUser | null>(null);\n  const [configuringUser, setConfiguringUser] = useState<AppUser | null>(null);\n  const [statistics, setStatistics] = useState<UserStatisticsResponse | null>(null);\n  const [roleMap, setRoleMap] = useState<Record<string, string>>({});\n  const [searchParams, setSearchParams] = useState<UserListRequest>({\n    Page: 1,\n    PageSize: 10,\n    SortBy: 'CreatedAt',\n    SortOrder: 'desc',\n  });\n\n  // 加载角色列表\n  React.useEffect(() => {\n    const fetchRoles = async () => {\n      try {\n        const response = await getAllRoles();\n        if (response.success && response.data) {\n          // 创建角色 ID 到名称的映射\n          const map: Record<string, string> = {};\n          response.data.roles.forEach(role => {\n            if (role.id) {\n              map[role.id] = role.name;\n            }\n          });\n          setRoleMap(map);\n        }\n      } catch (error) {\n        console.error('加载角色列表失败:', error);\n      }\n    };\n    fetchRoles();\n  }, []);\n\n  // 获取用户统计信息\n  const fetchStatistics = async () => {\n    try {\n      const response = await request<{ success: boolean; data: UserStatisticsResponse }>('/api/user/statistics', {\n        method: 'GET',\n      });\n      setStatistics(response.data);\n    } catch (error) {\n      console.error('获取统计信息失败:', error);\n      message.error('获取统计信息失败');\n    }\n  };\n\n  // 获取用户列表\n  const fetchUsers = async (params: any) => {\n    console.log('fetchUsers 被调用，参数:', params);\n    console.log('当前搜索参数:', searchParams);\n    \n    const requestData: UserListRequest = {\n      Page: params.current || searchParams.Page,\n      PageSize: params.pageSize || searchParams.PageSize,\n      Search: searchParams.Search,\n      RoleIds: searchParams.RoleIds,\n      IsActive: searchParams.IsActive,\n      SortBy: params.sortBy || searchParams.SortBy,\n      SortOrder: params.sortOrder || searchParams.SortOrder,\n      StartDate: searchParams.StartDate,\n      EndDate: searchParams.EndDate,\n    };\n\n    console.log('发送请求数据:', requestData);\n\n    try {\n      const response = await request<{ success: boolean; data: any }>('/api/user/list', {\n        method: 'POST',\n        data: requestData,\n      });\n\n      console.log('API响应:', response);\n\n      return {\n        data: response.data.users || [],\n        success: true,\n        total: response.data.total || 0,\n      };\n    } catch (error) {\n      console.error('获取用户列表失败:', error);\n      message.error('获取用户列表失败');\n      return {\n        data: [],\n        success: false,\n        total: 0,\n      };\n    }\n  };\n\n  // 处理搜索\n  const handleSearch = (values: any) => {\n    console.log('搜索表单提交:', values);\n    const newSearchParams: UserListRequest = {\n      Page: 1,\n      PageSize: searchParams.PageSize,\n      Search: values.search,\n      RoleIds: values.roleIds ? (Array.isArray(values.roleIds) ? values.roleIds : [values.roleIds]) : undefined,\n      IsActive: values.isActive,\n      SortBy: searchParams.SortBy,\n      SortOrder: searchParams.SortOrder,\n      StartDate: values.dateRange?.[0]?.format('YYYY-MM-DD'),\n      EndDate: values.dateRange?.[1]?.format('YYYY-MM-DD'),\n    };\n    setSearchParams(newSearchParams);\n    actionRef.current?.reload();\n  };\n\n  // 重置搜索\n  const handleReset = () => {\n    searchForm.resetFields();\n    const resetParams: UserListRequest = {\n      Page: 1,\n      PageSize: searchParams.PageSize,\n      SortBy: 'CreatedAt',\n      SortOrder: 'desc',\n    };\n    setSearchParams(resetParams);\n    actionRef.current?.reload();\n  };\n\n  // 删除用户（带删除原因）\n  const handleDelete = async (userId: string) => {\n    let deleteReason = '';\n    Modal.confirm({\n      title: '确定要删除这个用户吗？',\n      content: (\n        <div>\n          <p>此操作不可恢复，请输入删除原因：</p>\n          <Input.TextArea\n            rows={3}\n            placeholder=\"请输入删除原因（选填）\"\n            onChange={(e) => { deleteReason = e.target.value; }}\n            maxLength={200}\n          />\n        </div>\n      ),\n      okText: '确定删除',\n      cancelText: '取消',\n      okType: 'danger',\n      onOk: async () => {\n        try {\n          await request(`/api/user/${userId}`, {\n            method: 'DELETE',\n            params: { reason: deleteReason },\n          });\n          message.success('删除成功');\n          actionRef.current?.reload();\n          fetchStatistics();\n        } catch (error) {\n          console.error('删除用户失败:', error);\n          message.error('删除失败');\n        }\n      },\n    });\n  };\n\n  // 批量操作\n  const handleBulkAction = async (action: string) => {\n    if (selectedRows.length === 0) {\n      message.warning('请选择要操作的用户');\n      return;\n    }\n\n    // 如果是删除操作，弹窗输入删除原因\n    if (action === 'delete') {\n      let deleteReason = '';\n      Modal.confirm({\n        title: `确定要批量删除 ${selectedRows.length} 个用户吗？`,\n        content: (\n          <div>\n            <p>此操作不可恢复，请输入删除原因：</p>\n            <Input.TextArea\n              rows={3}\n              placeholder=\"请输入删除原因（选填）\"\n              onChange={(e) => { deleteReason = e.target.value; }}\n              maxLength={200}\n            />\n          </div>\n        ),\n        okText: '确定删除',\n        cancelText: '取消',\n        okType: 'danger',\n        onOk: async () => {\n          try {\n            await request('/api/user/bulk-action', {\n              method: 'POST',\n              data: {\n                UserIds: selectedRows.map(user => user.id),\n                Action: action,\n                Reason: deleteReason,\n              },\n            });\n\n            message.success(`批量删除成功`);\n            setSelectedRows([]);\n            actionRef.current?.reload();\n            fetchStatistics();\n          } catch (error) {\n            console.error('批量删除失败:', error);\n            message.error('批量删除失败');\n          }\n        },\n      });\n      return;\n    }\n\n    try {\n      await request('/api/user/bulk-action', {\n        method: 'POST',\n        data: {\n          UserIds: selectedRows.map(user => user.id),\n          Action: action,\n        },\n      });\n\n      const actionText = {\n        activate: '启用',\n        deactivate: '禁用',\n      }[action] || '操作';\n\n      message.success(`批量${actionText}成功`);\n      setSelectedRows([]);\n      actionRef.current?.reload();\n      fetchStatistics();\n    } catch (error) {\n      console.error('批量操作失败:', error);\n      message.error('批量操作失败');\n    }\n  };\n\n  // 切换用户状态\n  const handleToggleStatus = async (user: AppUser) => {\n    try {\n      const endpoint = user.isActive ? 'deactivate' : 'activate';\n      await request(`/api/user/${user.id}/${endpoint}`, {\n        method: 'PUT',\n      });\n\n      message.success(`用户已${user.isActive ? '禁用' : '启用'}`);\n      actionRef.current?.reload();\n      fetchStatistics();\n    } catch (error) {\n      console.error('切换用户状态失败:', error);\n      message.error('操作失败');\n    }\n  };\n\n  // 表格列定义\n  const columns: ProColumns<AppUser>[] = [\n    {\n      title: '用户名',\n      dataIndex: 'username',\n      key: 'username',\n      render: (text, record) => (\n        <Space>\n          <UserOutlined />\n          {text}\n        </Space>\n      ),\n    },\n    {\n      title: '邮箱',\n      dataIndex: 'email',\n      key: 'email',\n      ellipsis: true,\n    },\n    {\n      title: '角色',\n      dataIndex: 'roleIds',\n      key: 'roleIds',\n      render: (_, record) => {\n        if (!record.roleIds || record.roleIds.length === 0) {\n          return <Tag color=\"default\">未分配</Tag>;\n        }\n        return (\n          <Space wrap>\n            {record.roleIds.map(roleId => (\n              <Tag key={roleId} color=\"blue\">\n                {roleMap[roleId] || roleId}\n              </Tag>\n            ))}\n          </Space>\n        );\n      },\n    },\n    {\n      title: '状态',\n      dataIndex: 'isActive',\n      key: 'isActive',\n      render: (_, record) => (\n        <Badge\n          status={record.isActive ? 'success' : 'error'}\n          text={record.isActive ? '启用' : '禁用'}\n        />\n      ),\n      renderFormItem: (_, { record }) => (\n        <Switch\n          checked={record?.isActive}\n          onChange={() => record && handleToggleStatus(record)}\n        />\n      ),\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      valueType: 'dateTime',\n      sorter: true,\n    },\n    {\n      title: '最后登录',\n      dataIndex: 'lastLoginAt',\n      key: 'lastLoginAt',\n      valueType: 'dateTime',\n      render: (text) => text || '-',\n    },\n    {\n      title: '操作',\n      key: 'action',\n      fixed: 'right',\n      render: (_, record) => {\n        const items: MenuProps['items'] = [\n          {\n            key: 'view',\n            icon: <EyeOutlined />,\n            label: '查看详情',\n            onClick: () => {\n              setViewingUser(record);\n              setDetailVisible(true);\n            },\n          },\n          {\n            key: 'edit',\n            icon: <EditOutlined />,\n            label: '编辑',\n            onClick: () => {\n              setEditingUser(record);\n              setFormVisible(true);\n            },\n          },\n          {\n            key: 'permission',\n            icon: <KeyOutlined />,\n            label: '配置权限',\n            onClick: () => {\n              setConfiguringUser(record);\n              setPermissionModalVisible(true);\n            },\n          },\n          {\n            type: 'divider',\n          },\n          {\n            key: 'delete',\n            icon: <DeleteOutlined />,\n            label: '删除',\n            danger: true,\n            onClick: () => {\n              record.id && handleDelete(record.id);\n            },\n          },\n        ];\n\n        return (\n          <Space size=\"small\">\n            <Button\n              type=\"link\"\n              size=\"small\"\n              icon={<EyeOutlined />}\n              onClick={() => {\n                setViewingUser(record);\n                setDetailVisible(true);\n              }}\n            >\n              查看\n            </Button>\n            <PermissionControl permission=\"user:update\">\n              <Button\n                type=\"link\"\n                size=\"small\"\n                icon={<EditOutlined />}\n                onClick={() => {\n                  setEditingUser(record);\n                  setFormVisible(true);\n                }}\n              >\n                编辑\n              </Button>\n            </PermissionControl>\n            <Dropdown menu={{ items: items.slice(2) }} trigger={['click']}>\n              <Button type=\"link\" size=\"small\" icon={<MoreOutlined />}>\n                更多\n              </Button>\n            </Dropdown>\n          </Space>\n        );\n      },\n    },\n  ];\n\n  React.useEffect(() => {\n    fetchStatistics();\n  }, []);\n\n  return (\n    <PageContainer\n      title=\"用户管理\"\n      extra={[\n        <Button\n          key=\"refresh\"\n          icon={<ReloadOutlined />}\n          onClick={() => {\n            actionRef.current?.reload();\n            fetchStatistics();\n          }}\n        >\n          刷新\n        </Button>,\n        <PermissionControl permission=\"user:create\" key=\"add\">\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              setEditingUser(null);\n              setFormVisible(true);\n            }}\n          >\n            新增用户\n          </Button>\n        </PermissionControl>,\n      ]}\n    >\n      {/* 统计卡片 */}\n      {statistics && (\n        <ProCard style={{ marginBottom: 16 }}>\n          <Row gutter={16}>\n            <Col span={6}>\n              <Statistic\n                title=\"总用户数\"\n                value={statistics.totalUsers}\n                prefix={<TeamOutlined />}\n              />\n            </Col>\n            <Col span={6}>\n              <Statistic\n                title=\"活跃用户\"\n                value={statistics.activeUsers}\n                prefix={<CheckCircleOutlined />}\n                valueStyle={{ color: '#3f8600' }}\n              />\n            </Col>\n            <Col span={6}>\n              <Statistic\n                title=\"管理员\"\n                value={statistics.adminUsers}\n                prefix={<UserOutlined />}\n                valueStyle={{ color: '#cf1322' }}\n              />\n            </Col>\n            <Col span={6}>\n              <Statistic\n                title=\"本月新增\"\n                value={statistics.newUsersThisMonth}\n                prefix={<PlusOutlined />}\n                valueStyle={{ color: '#1890ff' }}\n              />\n            </Col>\n          </Row>\n        </ProCard>\n      )}\n\n      {/* 搜索表单 */}\n      <Card style={{ marginBottom: 16 }}>\n        <Form\n          form={searchForm}\n          layout=\"inline\"\n          onFinish={handleSearch}\n          style={{ marginBottom: 16 }}\n        >\n          <Form.Item name=\"search\" label=\"搜索\">\n            <Input placeholder=\"用户名或邮箱\" style={{ width: 200 }} />\n          </Form.Item>\n          <Form.Item name=\"roleIds\" label=\"角色\">\n            <Select \n              mode=\"multiple\"\n              placeholder=\"选择角色\" \n              style={{ width: 200 }} \n              allowClear\n              loading={Object.keys(roleMap).length === 0}\n            >\n              {Object.entries(roleMap).map(([id, name]) => (\n                <Select.Option key={id} value={id}>\n                  {name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item name=\"isActive\" label=\"状态\">\n            <Select placeholder=\"选择状态\" style={{ width: 120 }} allowClear>\n              <Select.Option value={true}>启用</Select.Option>\n              <Select.Option value={false}>禁用</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item name=\"dateRange\" label=\"创建时间\">\n            <DatePicker.RangePicker style={{ width: 240 }} />\n          </Form.Item>\n          <Form.Item>\n            <Space>\n              <Button type=\"primary\" htmlType=\"submit\">\n                查询\n              </Button>\n              <Button onClick={handleReset}>\n                重置\n              </Button>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Card>\n\n      {/* 用户列表表格 */}\n      <ProTable<AppUser>\n        actionRef={actionRef}\n        rowKey=\"id\"\n        search={false}\n        toolBarRender={() => [\n          <Button\n            key=\"activate\"\n            onClick={() => handleBulkAction('activate')}\n            disabled={selectedRows.length === 0}\n          >\n            批量启用\n          </Button>,\n          <Button\n            key=\"deactivate\"\n            onClick={() => handleBulkAction('deactivate')}\n            disabled={selectedRows.length === 0}\n          >\n            批量禁用\n          </Button>,\n          <Button\n            key=\"delete\"\n            danger\n            onClick={() => handleBulkAction('delete')}\n            disabled={selectedRows.length === 0}\n          >\n            批量删除\n          </Button>,\n        ]}\n        request={fetchUsers}\n        columns={columns}\n        rowSelection={{\n          onChange: (_, selectedRows) => {\n            setSelectedRows(selectedRows);\n          },\n        }}\n        pagination={{\n          defaultPageSize: 10,\n          showSizeChanger: true,\n          showQuickJumper: true,\n          showTotal: (total, range) =>\n            `第 ${range[0]}-${range[1]} 条/总共 ${total} 条`,\n        }}\n      />\n\n      {/* 用户表单弹窗 */}\n      <Modal\n        title={editingUser ? '编辑用户' : '新增用户'}\n        open={formVisible}\n        onCancel={() => setFormVisible(false)}\n        footer={null}\n        width={600}\n      >\n        <UserForm\n          user={editingUser}\n          onSuccess={() => {\n            setFormVisible(false);\n            actionRef.current?.reload();\n            fetchStatistics();\n          }}\n          onCancel={() => setFormVisible(false)}\n        />\n      </Modal>\n\n      {/* 用户详情抽屉 */}\n      <Drawer\n        title=\"用户详情\"\n        open={detailVisible}\n        onClose={() => setDetailVisible(false)}\n        width={600}\n      >\n        {viewingUser && (\n          <UserDetail\n            user={viewingUser}\n            onClose={() => setDetailVisible(false)}\n          />\n        )}\n      </Drawer>\n\n      {/* 用户权限配置模态框 */}\n      <UserPermissionModal\n        visible={permissionModalVisible}\n        user={configuringUser}\n        onCancel={() => {\n          setPermissionModalVisible(false);\n          setConfiguringUser(null);\n        }}\n        onSuccess={() => {\n          setPermissionModalVisible(false);\n          setConfiguringUser(null);\n          actionRef.current?.reload();\n        }}\n      />\n    </PageContainer>\n  );\n};\n\nexport default UserManagement;\n",
      "__isJSFile": true,
      "__absFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/pages/user-management/index.tsx"
    },
    "9": {
      "name": "role-management",
      "icon": "team",
      "path": "/system/role-management",
      "file": "@/pages/role-management/index.tsx",
      "parentId": "6",
      "id": "9",
      "absPath": "/system/role-management",
      "__content": "import { PlusOutlined, EditOutlined, DeleteOutlined, SettingOutlined, MoreOutlined, KeyOutlined } from '@ant-design/icons';\nimport { PageContainer, ProTable, ActionType, ProColumns } from '@ant-design/pro-components';\nimport { Button, message, Popconfirm, Space, Tag, Dropdown, Modal, Input, Badge } from 'antd';\nimport type { MenuProps } from 'antd';\nimport React, { useRef, useState } from 'react';\nimport { getAllRoles, getAllRolesWithStats, deleteRole } from '@/services/role/api';\nimport type { Role } from '@/services/role/types';\nimport RoleForm from './components/RoleForm';\nimport MenuPermissionModal from './components/MenuPermissionModal';\nimport PermissionConfigModal from './components/PermissionConfigModal';\nimport PermissionControl from '@/components/PermissionControl';\n\nconst RoleManagement: React.FC = () => {\n  const actionRef = useRef<ActionType>();\n  const [modalVisible, setModalVisible] = useState(false);\n  const [menuPermissionModalVisible, setMenuPermissionModalVisible] = useState(false);\n  const [operationPermissionModalVisible, setOperationPermissionModalVisible] = useState(false);\n  const [currentRole, setCurrentRole] = useState<Role | undefined>();\n\n  /**\n   * 加载角色数据（带统计信息）\n   */\n  const loadRoleData = async () => {\n    try {\n      const response = await getAllRolesWithStats();\n      if (response.success && response.data) {\n        return {\n          data: response.data.roles,\n          total: response.data.total,\n          success: true,\n        };\n      }\n      return {\n        data: [],\n        total: 0,\n        success: false,\n      };\n    } catch (error) {\n      message.error('加载角色失败');\n      return {\n        data: [],\n        total: 0,\n        success: false,\n      };\n    }\n  };\n\n  /**\n   * 删除角色（带删除原因）\n   */\n  const handleDelete = async (id: string, roleName: string) => {\n    let deleteReason = '';\n    Modal.confirm({\n      title: `确定要删除角色\"${roleName}\"吗？`,\n      content: (\n        <div>\n          <p>删除角色将自动从所有用户的角色列表中移除此角色</p>\n          <p>请输入删除原因：</p>\n          <Input.TextArea\n            rows={3}\n            placeholder=\"请输入删除原因（选填）\"\n            onChange={(e) => { deleteReason = e.target.value; }}\n            maxLength={200}\n          />\n        </div>\n      ),\n      okText: '确定删除',\n      cancelText: '取消',\n      okType: 'danger',\n      onOk: async () => {\n        try {\n          const response = await deleteRole(id, deleteReason);\n          if (response.success) {\n            message.success('删除成功');\n            actionRef.current?.reload();\n          } else {\n            message.error(response.errorMessage || '删除失败');\n          }\n        } catch (error: any) {\n          message.error(error.message || '删除失败');\n        }\n      },\n    });\n  };\n\n  /**\n   * 表格列定义\n   */\n  const columns: ProColumns<Role>[] = [\n    {\n      title: '角色名称',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text, record: any) => (\n        <Space>\n          {text}\n          {record.userCount > 0 && (\n            <Badge count={record.userCount} style={{ backgroundColor: '#52c41a' }} title={`${record.userCount} 个用户`} />\n          )}\n        </Space>\n      ),\n    },\n    {\n      title: '描述',\n      dataIndex: 'description',\n      key: 'description',\n      ellipsis: true,\n    },\n    {\n      title: '状态',\n      dataIndex: 'isActive',\n      key: 'isActive',\n      render: (_, record) => (\n        <Tag color={record.isActive ? 'success' : 'default'}>\n          {record.isActive ? '启用' : '禁用'}\n        </Tag>\n      ),\n    },\n    {\n      title: '统计',\n      key: 'stats',\n      render: (_, record: any) => (\n        <Space split=\"|\">\n          <span>用户: {record.userCount || 0}</span>\n          <span>菜单: {record.menuCount || 0}</span>\n          <span>权限: {record.permissionCount || 0}</span>\n        </Space>\n      ),\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      valueType: 'dateTime',\n    },\n    {\n      title: '操作',\n      key: 'action',\n      fixed: 'right',\n      render: (_, record) => {\n        const moreItems: MenuProps['items'] = [\n          {\n            key: 'menu-permission',\n            icon: <SettingOutlined />,\n            label: '菜单权限',\n            onClick: () => {\n              setCurrentRole(record);\n              setMenuPermissionModalVisible(true);\n            },\n          },\n          {\n            key: 'operation-permission',\n            icon: <KeyOutlined />,\n            label: '操作权限',\n            onClick: () => {\n              setCurrentRole(record);\n              setOperationPermissionModalVisible(true);\n            },\n          },\n          {\n            type: 'divider',\n          },\n          {\n            key: 'delete',\n            icon: <DeleteOutlined />,\n            label: '删除',\n            danger: true,\n            onClick: () => {\n              handleDelete(record.id!, record.name);\n            },\n          },\n        ];\n\n        return (\n          <Space size=\"small\">\n            <PermissionControl permission=\"role:update\">\n              <Button\n                type=\"link\"\n                size=\"small\"\n                icon={<EditOutlined />}\n                onClick={() => {\n                  setCurrentRole(record);\n                  setModalVisible(true);\n                }}\n              >\n                编辑\n              </Button>\n            </PermissionControl>\n            <Dropdown menu={{ items: moreItems }} trigger={['click']}>\n              <Button type=\"link\" size=\"small\" icon={<MoreOutlined />}>\n                更多\n              </Button>\n            </Dropdown>\n          </Space>\n        );\n      },\n    },\n  ];\n\n  return (\n    <PageContainer\n      header={{\n        title: '角色管理',\n        subTitle: '系统角色配置和权限管理',\n      }}\n    >\n      <ProTable<Role>\n        actionRef={actionRef}\n        rowKey=\"id\"\n        search={false}\n        toolBarRender={() => [\n          <PermissionControl permission=\"role:create\" key=\"create\">\n            <Button\n              type=\"primary\"\n              icon={<PlusOutlined />}\n              onClick={() => {\n                setCurrentRole(undefined);\n                setModalVisible(true);\n              }}\n            >\n              新增角色\n            </Button>\n          </PermissionControl>,\n        ]}\n        request={loadRoleData}\n        columns={columns}\n      />\n      \n      <RoleForm\n        visible={modalVisible}\n        current={currentRole}\n        onCancel={() => {\n          setModalVisible(false);\n          setCurrentRole(undefined);\n        }}\n        onSuccess={() => {\n          setModalVisible(false);\n          setCurrentRole(undefined);\n          actionRef.current?.reload();\n        }}\n      />\n\n      <MenuPermissionModal\n        visible={menuPermissionModalVisible}\n        role={currentRole}\n        onCancel={() => {\n          setMenuPermissionModalVisible(false);\n          setCurrentRole(undefined);\n        }}\n        onSuccess={() => {\n          setMenuPermissionModalVisible(false);\n          setCurrentRole(undefined);\n          message.success('菜单权限分配成功');\n        }}\n      />\n\n      <PermissionConfigModal\n        visible={operationPermissionModalVisible}\n        role={currentRole}\n        onCancel={() => {\n          setOperationPermissionModalVisible(false);\n          setCurrentRole(undefined);\n        }}\n        onSuccess={() => {\n          setOperationPermissionModalVisible(false);\n          setCurrentRole(undefined);\n          message.success('操作权限分配成功');\n          actionRef.current?.reload();\n        }}\n      />\n    </PageContainer>\n  );\n};\n\nexport default RoleManagement;\n\n",
      "__isJSFile": true,
      "__absFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/pages/role-management/index.tsx"
    },
    "10": {
      "name": "menu-management",
      "icon": "menu",
      "path": "/system/menu-management",
      "file": "@/pages/menu-management/index.tsx",
      "parentId": "6",
      "id": "10",
      "absPath": "/system/menu-management",
      "__content": "import { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport * as Icons from '@ant-design/icons';\nimport { PageContainer, ProTable, ActionType, ProColumns } from '@ant-design/pro-components';\nimport { Button, message, Popconfirm, Space, Tag, Modal, Input } from 'antd';\nimport React, { useRef, useState } from 'react';\nimport { getMenuTree, deleteMenu } from '@/services/menu/api';\nimport type { MenuTreeNode } from '@/services/menu/types';\nimport MenuForm from './components/MenuForm';\nimport PermissionControl from '@/components/PermissionControl';\n\nconst MenuManagement: React.FC = () => {\n  const actionRef = useRef<ActionType>();\n  const [modalVisible, setModalVisible] = useState(false);\n  const [currentMenu, setCurrentMenu] = useState<MenuTreeNode | undefined>();\n\n  /**\n   * 根据图标名称获取图标组件\n   */\n  const getIconComponent = (iconName?: string): React.ReactNode => {\n    if (!iconName) return null;\n    \n    const formatIconName = (name: string) => {\n      return name\n        .split('-')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join('');\n    };\n    \n    const suffixes = ['Outlined', 'Filled', 'TwoTone', ''];\n    \n    for (const suffix of suffixes) {\n      const iconComponentName = formatIconName(iconName) + suffix;\n      const IconComponent = (Icons as any)[iconComponentName];\n      \n      if (IconComponent) {\n        return React.createElement(IconComponent);\n      }\n    }\n    \n    return null;\n  };\n\n  /**\n   * 加载菜单数据\n   */\n  const loadMenuData = async () => {\n    try {\n      const response = await getMenuTree();\n      if (response.success && response.data) {\n        return {\n          data: response.data,\n          success: true,\n        };\n      }\n      return {\n        data: [],\n        success: false,\n      };\n    } catch (error) {\n      message.error('加载菜单失败');\n      return {\n        data: [],\n        success: false,\n      };\n    }\n  };\n\n  /**\n   * 删除菜单（带删除原因和级联提示）\n   */\n  const handleDelete = async (id: string, menuName: string) => {\n    let deleteReason = '';\n    Modal.confirm({\n      title: `确定要删除菜单\"${menuName}\"吗？`,\n      content: (\n        <div>\n          <p style={{ color: '#ff4d4f' }}>\n            删除菜单将自动从所有角色的菜单列表中移除此菜单\n          </p>\n          <p style={{ color: '#ff4d4f' }}>\n            如果有子菜单，必须先删除所有子菜单\n          </p>\n          <p>请输入删除原因：</p>\n          <Input.TextArea\n            rows={3}\n            placeholder=\"请输入删除原因（选填）\"\n            onChange={(e) => { deleteReason = e.target.value; }}\n            maxLength={200}\n          />\n        </div>\n      ),\n      okText: '确定删除',\n      cancelText: '取消',\n      okType: 'danger',\n      width: 520,\n      onOk: async () => {\n        try {\n          const response = await deleteMenu(id, deleteReason);\n          if (response.success) {\n            message.success('删除成功');\n            actionRef.current?.reload();\n          } else {\n            message.error(response.errorMessage || '删除失败');\n          }\n        } catch (error: any) {\n          message.error(error.message || '删除失败');\n        }\n      },\n    });\n  };\n\n  /**\n   * 表格列定义\n   */\n  const columns: ProColumns<MenuTreeNode>[] = [\n    {\n      title: '菜单名称',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: '路径',\n      dataIndex: 'path',\n      key: 'path',\n    },\n    {\n      title: '图标',\n      dataIndex: 'icon',\n      key: 'icon',\n      render: (_, record) => (\n        <Space>\n          {getIconComponent(record.icon)}\n          <span>{record.icon || '-'}</span>\n        </Space>\n      ),\n    },\n    {\n      title: '组件',\n      dataIndex: 'component',\n      key: 'component',\n      ellipsis: true,\n    },\n    {\n      title: '排序',\n      dataIndex: 'sortOrder',\n      key: 'sortOrder',\n    },\n    {\n      title: '状态',\n      dataIndex: 'isEnabled',\n      key: 'isEnabled',\n      render: (_, record) => (\n        <Tag color={record.isEnabled ? 'success' : 'default'}>\n          {record.isEnabled ? '启用' : '禁用'}\n        </Tag>\n      ),\n    },\n    {\n      title: '外部链接',\n      dataIndex: 'isExternal',\n      key: 'isExternal',\n      render: (_, record) => (\n        <Tag color={record.isExternal ? 'blue' : 'default'}>\n          {record.isExternal ? '是' : '否'}\n        </Tag>\n      ),\n    },\n    {\n      title: '隐藏菜单',\n      dataIndex: 'hideInMenu',\n      key: 'hideInMenu',\n      render: (_, record) => (\n        <Tag color={record.hideInMenu ? 'warning' : 'default'}>\n          {record.hideInMenu ? '是' : '否'}\n        </Tag>\n      ),\n    },\n    {\n      title: '操作',\n      key: 'action',\n      fixed: 'right',\n      render: (_, record) => (\n        <Space size=\"small\">\n          <PermissionControl permission=\"menu:update\">\n            <Button\n              type=\"link\"\n              size=\"small\"\n              icon={<EditOutlined />}\n              onClick={() => {\n                setCurrentMenu(record);\n                setModalVisible(true);\n              }}\n            >\n              编辑\n            </Button>\n          </PermissionControl>\n          <PermissionControl permission=\"menu:delete\">\n            <Button \n              type=\"link\" \n              size=\"small\" \n              danger \n              icon={<DeleteOutlined />}\n              onClick={() => handleDelete(record.id!, record.name)}\n            >\n              删除\n            </Button>\n          </PermissionControl>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <PageContainer\n      header={{\n        title: '菜单管理',\n        subTitle: '系统菜单配置和层级管理',\n      }}\n    >\n      <ProTable<MenuTreeNode>\n        actionRef={actionRef}\n        rowKey=\"id\"\n        search={false}\n        toolBarRender={() => [\n          <PermissionControl permission=\"menu:create\" key=\"create\">\n            <Button\n              type=\"primary\"\n              icon={<PlusOutlined />}\n              onClick={() => {\n                setCurrentMenu(undefined);\n                setModalVisible(true);\n              }}\n            >\n              新增菜单\n            </Button>\n          </PermissionControl>,\n        ]}\n        request={loadMenuData}\n        columns={columns}\n        pagination={false}\n        expandable={{\n          defaultExpandAllRows: true,\n        }}\n      />\n      \n      <MenuForm\n        visible={modalVisible}\n        current={currentMenu}\n        onCancel={() => {\n          setModalVisible(false);\n          setCurrentMenu(undefined);\n        }}\n        onSuccess={() => {\n          setModalVisible(false);\n          setCurrentMenu(undefined);\n          actionRef.current?.reload();\n        }}\n      />\n    </PageContainer>\n  );\n};\n\nexport default MenuManagement;\n\n",
      "__isJSFile": true,
      "__absFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/pages/menu-management/index.tsx"
    },
    "11": {
      "name": "user-log",
      "icon": "file-text",
      "path": "/system/user-log",
      "file": "@/pages/user-log/index.tsx",
      "parentId": "6",
      "id": "11",
      "absPath": "/system/user-log",
      "__content": "import { PageContainer, ProTable, ActionType, ProColumns } from '@ant-design/pro-components';\nimport { Tag, Button } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\nimport React, { useRef, useState } from 'react';\nimport { getUserActivityLogs } from '@/services/user-log/api';\nimport type { UserActivityLog } from '@/services/user-log/types';\nimport LogDetailDrawer from './components/LogDetailDrawer';\n\nconst UserLog: React.FC = () => {\n  const actionRef = useRef<ActionType>(null);\n  const [detailDrawerOpen, setDetailDrawerOpen] = useState(false);\n  const [selectedLog, setSelectedLog] = useState<UserActivityLog | null>(null);\n\n  const handleViewDetail = (record: UserActivityLog) => {\n    setSelectedLog(record);\n    setDetailDrawerOpen(true);\n  };\n\n  const handleCloseDetail = () => {\n    setDetailDrawerOpen(false);\n    setSelectedLog(null);\n  };\n\n  /**\n   * 获取操作类型标签颜色\n   */\n  const getActionTagColor = (action: string): string => {\n    const colorMap: Record<string, string> = {\n      // 认证相关\n      login: 'green',\n      logout: 'default',\n      refresh_token: 'geekblue',\n      register: 'blue',\n      \n      // 用户相关\n      view_profile: 'lime',\n      update_profile: 'purple',\n      change_password: 'orange',\n      view_activity_logs: 'cyan',\n      activate_user: 'green',\n      deactivate_user: 'volcano',\n      bulk_action: 'magenta',\n      update_user_role: 'gold',\n      create_user: 'blue',\n      view_users: 'cyan',\n      view_statistics: 'purple',\n      view_user: 'cyan',\n      update_user: 'blue',\n      delete_user: 'red',\n      \n      // 角色相关\n      view_roles: 'cyan',\n      create_role: 'blue',\n      update_role: 'orange',\n      delete_role: 'red',\n      \n      // 菜单相关\n      view_menus: 'cyan',\n      create_menu: 'blue',\n      update_menu: 'orange',\n      delete_menu: 'red',\n      \n      // 通知相关\n      view_notices: 'cyan',\n      create_notice: 'blue',\n      update_notice: 'orange',\n      delete_notice: 'red',\n      \n      // 标签相关\n      view_tags: 'cyan',\n      create_tag: 'blue',\n      update_tag: 'orange',\n      delete_tag: 'red',\n      \n      // 规则相关\n      view_rules: 'cyan',\n      create_rule: 'blue',\n      update_rule: 'orange',\n      delete_rule: 'red',\n      \n      // 权限相关\n      view_permissions: 'cyan',\n      create_permission: 'blue',\n      update_permission: 'orange',\n      delete_permission: 'red',\n      \n      // 其他\n      view_current_user: 'lime',\n    };\n    return colorMap[action] || 'default';\n  };\n\n  /**\n   * 获取操作类型显示文本\n   */\n  const getActionText = (action: string): string => {\n    const textMap: Record<string, string> = {\n      // 认证相关\n      login: '登录',\n      logout: '登出',\n      refresh_token: '刷新Token',\n      register: '注册',\n      \n      // 用户相关\n      view_profile: '查看个人信息',\n      update_profile: '更新个人信息',\n      change_password: '修改密码',\n      view_activity_logs: '查看活动日志',\n      activate_user: '启用用户',\n      deactivate_user: '禁用用户',\n      bulk_action: '批量操作',\n      update_user_role: '更新用户角色',\n      create_user: '创建用户',\n      view_users: '查看用户列表',\n      view_statistics: '查看统计',\n      view_user: '查看用户',\n      update_user: '更新用户',\n      delete_user: '删除用户',\n      \n      // 角色相关\n      view_roles: '查看角色',\n      create_role: '创建角色',\n      update_role: '更新角色',\n      delete_role: '删除角色',\n      role_operation: '角色操作',\n      \n      // 菜单相关\n      view_menus: '查看菜单',\n      create_menu: '创建菜单',\n      update_menu: '更新菜单',\n      delete_menu: '删除菜单',\n      menu_operation: '菜单操作',\n      \n      // 通知相关\n      view_notices: '查看通知',\n      create_notice: '创建通知',\n      update_notice: '更新通知',\n      delete_notice: '删除通知',\n      notice_operation: '通知操作',\n      \n      // 标签相关\n      view_tags: '查看标签',\n      create_tag: '创建标签',\n      update_tag: '更新标签',\n      delete_tag: '删除标签',\n      tag_operation: '标签操作',\n      \n      // 规则相关\n      view_rules: '查看规则',\n      create_rule: '创建规则',\n      update_rule: '更新规则',\n      delete_rule: '删除规则',\n      rule_operation: '规则操作',\n      \n      // 权限相关\n      view_permissions: '查看权限',\n      create_permission: '创建权限',\n      update_permission: '更新权限',\n      delete_permission: '删除权限',\n      permission_operation: '权限操作',\n      \n      // 其他\n      view_current_user: '查看当前用户',\n      user_operation: '用户操作',\n      \n      // 默认HTTP操作\n      get_request: 'GET请求',\n      post_request: 'POST请求',\n      put_request: 'PUT请求',\n      delete_request: 'DELETE请求',\n      patch_request: 'PATCH请求',\n    };\n    return textMap[action] || action;\n  };\n\n  const columns: ProColumns<UserActivityLog>[] = [\n    {\n      title: '用户',\n      dataIndex: 'username',\n      key: 'username',\n      ellipsis: true,\n    },\n    {\n      title: '操作类型',\n      dataIndex: 'action',\n      key: 'action',\n      render: (_, record) => (\n        <Tag color={getActionTagColor(record.action)}>\n          {getActionText(record.action)}\n        </Tag>\n      ),\n      valueType: 'select',\n      valueEnum: {\n        // 认证相关\n        login: { text: '登录' },\n        logout: { text: '登出' },\n        refresh_token: { text: '刷新Token' },\n        register: { text: '注册' },\n        \n        // 用户相关\n        view_profile: { text: '查看个人信息' },\n        update_profile: { text: '更新个人信息' },\n        change_password: { text: '修改密码' },\n        view_activity_logs: { text: '查看活动日志' },\n        activate_user: { text: '启用用户' },\n        deactivate_user: { text: '禁用用户' },\n        bulk_action: { text: '批量操作' },\n        update_user_role: { text: '更新用户角色' },\n        create_user: { text: '创建用户' },\n        view_users: { text: '查看用户列表' },\n        view_statistics: { text: '查看统计' },\n        view_user: { text: '查看用户' },\n        update_user: { text: '更新用户' },\n        delete_user: { text: '删除用户' },\n        \n        // 角色相关\n        view_roles: { text: '查看角色' },\n        create_role: { text: '创建角色' },\n        update_role: { text: '更新角色' },\n        delete_role: { text: '删除角色' },\n        \n        // 菜单相关\n        view_menus: { text: '查看菜单' },\n        create_menu: { text: '创建菜单' },\n        update_menu: { text: '更新菜单' },\n        delete_menu: { text: '删除菜单' },\n        \n        // 通知相关\n        view_notices: { text: '查看通知' },\n        create_notice: { text: '创建通知' },\n        update_notice: { text: '更新通知' },\n        delete_notice: { text: '删除通知' },\n        \n        // 标签相关\n        view_tags: { text: '查看标签' },\n        create_tag: { text: '创建标签' },\n        update_tag: { text: '更新标签' },\n        delete_tag: { text: '删除标签' },\n        \n        // 规则相关\n        view_rules: { text: '查看规则' },\n        create_rule: { text: '创建规则' },\n        update_rule: { text: '更新规则' },\n        delete_rule: { text: '删除规则' },\n        \n        // 权限相关\n        view_permissions: { text: '查看权限' },\n        create_permission: { text: '创建权限' },\n        update_permission: { text: '更新权限' },\n        delete_permission: { text: '删除权限' },\n        \n        // 其他\n        view_current_user: { text: '查看当前用户' },\n      },\n    },\n    {\n      title: '描述',\n      dataIndex: 'description',\n      key: 'description',\n      search: false,\n    },\n    {\n      title: 'IP地址',\n      dataIndex: 'ipAddress',\n      key: 'ipAddress',\n      search: false,\n      ellipsis: true,\n    },\n    {\n      title: '用户代理',\n      dataIndex: 'userAgent',\n      key: 'userAgent',\n      search: false,\n      ellipsis: true,\n      hideInTable: true,\n    },\n    {\n      title: '操作时间',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      valueType: 'dateTime',\n      search: false,\n      sorter: true,\n    },\n    {\n      title: '操作',\n      key: 'option',\n      valueType: 'option',\n      render: (_, record) => [\n        <Button\n          key=\"view\"\n          type=\"link\"\n          size=\"small\"\n          icon={<EyeOutlined />}\n          onClick={() => handleViewDetail(record)}\n        >\n          详情\n        </Button>,\n      ],\n    },\n  ];\n\n  return (\n    <PageContainer\n      header={{\n        title: '用户操作日志',\n        subTitle: '系统用户活动记录和审计日志',\n      }}\n    >\n      <ProTable<UserActivityLog>\n        actionRef={actionRef}\n        rowKey=\"id\"\n        search={{\n          labelWidth: 120,\n          optionRender: (searchConfig, formProps, dom) => {\n            const reversed = [...dom];\n            reversed.reverse();\n            return reversed;\n          },\n        }}\n        request={async (params, sort) => {\n          const { current = 1, pageSize = 20, action } = params;\n          \n          try {\n            const response = await getUserActivityLogs({\n              page: current,\n              pageSize,\n              action,\n            });\n\n            if (response.success && response.data) {\n              // 后端返回的数据结构：{ data: { data: [...], total: xxx, ... } }\n              const result = response.data as any;\n              return {\n                data: result.data || [],\n                total: result.total || 0,\n                success: true,\n              };\n            }\n\n            return {\n              data: [],\n              total: 0,\n              success: false,\n            };\n          } catch (error) {\n            console.error('Failed to load user activity logs:', error);\n            return {\n              data: [],\n              total: 0,\n              success: false,\n            };\n          }\n        }}\n        columns={columns}\n        pagination={{\n          defaultPageSize: 20,\n          showSizeChanger: true,\n          showQuickJumper: true,\n        }}\n      />\n      \n      <LogDetailDrawer\n        open={detailDrawerOpen}\n        log={selectedLog}\n        onClose={handleCloseDetail}\n      />\n    </PageContainer>\n  );\n};\n\nexport default UserLog;\n\n",
      "__isJSFile": true,
      "__absFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/pages/user-log/index.tsx"
    },
    "12": {
      "name": "change-password",
      "path": "/user/change-password",
      "hideInMenu": true,
      "file": "@/pages/user/change-password/index.tsx",
      "parentId": "ant-design-pro-layout",
      "id": "12",
      "absPath": "/user/change-password",
      "__content": "import { LockOutlined } from '@ant-design/icons';\nimport { ProForm, ProFormText } from '@ant-design/pro-components';\nimport { FormattedMessage, Helmet, useIntl } from '@umijs/max';\nimport { Alert, App, Card } from 'antd';\nimport { createStyles } from 'antd-style';\nimport React, { useState } from 'react';\nimport { changePassword } from '@/services/ant-design-pro/api';\nimport Settings from '../../../../config/defaultSettings';\n\nconst useStyles = createStyles(({ token }) => {\n  return {\n    container: {\n      padding: '24px',\n      maxWidth: '600px',\n      margin: '0 auto',\n    },\n    card: {\n      boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\n    },\n  };\n});\n\n\nconst ChangePasswordMessage: React.FC<{\n  content: string;\n}> = ({ content }) => {\n  return (\n    <Alert\n      style={{\n        marginBottom: 24,\n      }}\n      message={content}\n      type=\"error\"\n      showIcon\n    />\n  );\n};\n\nconst ChangePassword: React.FC = () => {\n  const [changePasswordState, setChangePasswordState] = useState<API.ChangePasswordResult>({});\n  const { styles } = useStyles();\n  const { message } = App.useApp();\n  const intl = useIntl();\n\n  const handleSubmit = async (values: API.ChangePasswordParams) => {\n    try {\n      // 修改密码\n      const result = await changePassword(values);\n      if (result.success) {\n        const defaultChangePasswordSuccessMessage = intl.formatMessage({\n          id: 'pages.changePassword.success',\n          defaultMessage: '密码修改成功！',\n        });\n        message.success(defaultChangePasswordSuccessMessage);\n        \n        // 修改成功后清空表单\n        setChangePasswordState({});\n        return;\n      }\n      \n      // 如果失败去设置用户错误信息\n      setChangePasswordState(result);\n    } catch (error) {\n      const defaultChangePasswordFailureMessage = intl.formatMessage({\n        id: 'pages.changePassword.failure',\n        defaultMessage: '密码修改失败，请重试！',\n      });\n      console.log(error);\n      message.error(defaultChangePasswordFailureMessage);\n    }\n  };\n\n  const { errorCode, errorMessage } = changePasswordState;\n\n  return (\n    <div className={styles.container}>\n      <Helmet>\n        <title>\n          {intl.formatMessage({\n            id: 'menu.changePassword',\n            defaultMessage: '修改密码',\n          })}\n          {Settings.title && ` - ${Settings.title}`}\n        </title>\n      </Helmet>\n      \n      <Card \n        title={intl.formatMessage({\n          id: 'menu.changePassword',\n          defaultMessage: '修改密码',\n        })}\n        className={styles.card}\n      >\n        <ProForm\n          onFinish={async (values) => {\n            await handleSubmit(values as API.ChangePasswordParams);\n          }}\n          submitter={{\n            searchConfig: {\n              submitText: intl.formatMessage({\n                id: 'pages.changePassword.submit',\n                defaultMessage: '修改密码',\n              }),\n            },\n          }}\n        >\n          {errorCode && (\n            <ChangePasswordMessage content={errorMessage || '密码修改失败'} />\n          )}\n\n          <ProFormText.Password\n            name=\"currentPassword\"\n            fieldProps={{\n              size: 'large',\n              prefix: <LockOutlined />,\n            }}\n            placeholder={intl.formatMessage({\n              id: 'pages.changePassword.currentPassword.placeholder',\n              defaultMessage: '请输入当前密码',\n            })}\n            rules={[\n              {\n                required: true,\n                message: (\n                  <FormattedMessage\n                    id=\"pages.changePassword.currentPassword.required\"\n                    defaultMessage=\"请输入当前密码!\"\n                  />\n                ),\n              },\n            ]}\n          />\n\n          <ProFormText.Password\n            name=\"newPassword\"\n            fieldProps={{\n              size: 'large',\n              prefix: <LockOutlined />,\n            }}\n            placeholder={intl.formatMessage({\n              id: 'pages.changePassword.newPassword.placeholder',\n              defaultMessage: '请输入新密码',\n            })}\n            rules={[\n              {\n                required: true,\n                message: (\n                  <FormattedMessage\n                    id=\"pages.changePassword.newPassword.required\"\n                    defaultMessage=\"请输入新密码！\"\n                  />\n                ),\n              },\n              {\n                min: 6,\n                message: (\n                  <FormattedMessage\n                    id=\"pages.changePassword.newPassword.length\"\n                    defaultMessage=\"密码长度至少6个字符\"\n                  />\n                ),\n              },\n            ]}\n          />\n\n          <ProFormText.Password\n            name=\"confirmPassword\"\n            fieldProps={{\n              size: 'large',\n              prefix: <LockOutlined />,\n            }}\n            placeholder={intl.formatMessage({\n              id: 'pages.changePassword.confirmPassword.placeholder',\n              defaultMessage: '请确认新密码',\n            })}\n            rules={[\n              {\n                required: true,\n                message: (\n                  <FormattedMessage\n                    id=\"pages.changePassword.confirmPassword.required\"\n                    defaultMessage=\"请确认新密码！\"\n                  />\n                ),\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('newPassword') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(new Error('两次输入的密码不一致！'));\n                },\n              }),\n            ]}\n          />\n        </ProForm>\n      </Card>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n",
      "__isJSFile": true,
      "__absFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/pages/user/change-password/index.tsx"
    },
    "13": {
      "name": "account.center",
      "path": "/account/center",
      "hideInMenu": true,
      "file": "@/pages/account/center/index.tsx",
      "parentId": "ant-design-pro-layout",
      "id": "13",
      "absPath": "/account/center",
      "__content": "import {\n  EditOutlined,\n  UserOutlined,\n  MailOutlined,\n  CalendarOutlined,\n  SafetyOutlined,\n  HistoryOutlined,\n} from '@ant-design/icons';\nimport { ProCard, ProForm, ProFormText, ProFormDigit } from '@ant-design/pro-components';\nimport { FormattedMessage, Helmet, useIntl } from '@umijs/max';\nimport { Avatar, Button, Descriptions, Divider, List, message, Space, Tag, Typography } from 'antd';\nimport { createStyles } from 'antd-style';\nimport React, { useEffect, useState } from 'react';\nimport { getCurrentUserProfile, updateUserProfile, getUserActivityLogs } from '@/services/ant-design-pro/api';\nimport Settings from '../../../../config/defaultSettings';\n\nconst { Title, Text } = Typography;\n\nconst useStyles = createStyles(({ token }) => {\n  return {\n    container: {\n      padding: '24px',\n      width: '100%',\n    },\n    profileCard: {\n      marginBottom: '24px',\n    },\n    avatarSection: {\n      textAlign: 'center',\n      padding: '24px',\n    },\n    infoSection: {\n      padding: '24px',\n    },\n    activityCard: {\n      marginTop: '24px',\n    },\n    editButton: {\n      marginBottom: '16px',\n    },\n  };\n});\n\ninterface UserProfile {\n  id: string;\n  username: string;\n  name?: string;\n  email?: string;\n  age?: number;\n  role: string;\n  isActive: boolean;\n  createdAt: string;\n  updatedAt: string;\n  lastLoginAt?: string;\n}\n\ninterface ActivityLog {\n  id: string;\n  action: string;\n  description: string;\n  ipAddress?: string;\n  userAgent?: string;\n  createdAt: string;\n}\n\nconst UserCenter: React.FC = () => {\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\n  const [activityLogs, setActivityLogs] = useState<ActivityLog[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [editing, setEditing] = useState(false);\n  const [form] = ProForm.useForm();\n  const { styles } = useStyles();\n  const intl = useIntl();\n\n  // 获取用户信息\n  const fetchUserProfile = async () => {\n    try {\n      setLoading(true);\n      const response = await getCurrentUserProfile();\n      if (response.success && response.data) {\n        // 将 CurrentUser 转换为 UserProfile 格式\n        const currentUser = response.data;\n        const profile: UserProfile = {\n          id: currentUser.userid || '',\n          username: currentUser.name || '',\n          name: currentUser.name,\n          email: currentUser.email,\n          age: 18, // 使用默认年龄，因为CurrentUser中没有age字段\n          role: currentUser.access || 'user',\n          isActive: currentUser.isLogin || false,\n          createdAt: '', // CurrentUser中没有这些时间字段，使用空字符串\n          updatedAt: '',\n          lastLoginAt: '',\n        };\n        setUserProfile(profile);\n        form.setFieldsValue({\n          name: currentUser.name,\n          email: currentUser.email,\n          age: 18, // CurrentUser中没有age字段，使用默认值\n        });\n      }\n    } catch (error) {\n      console.error('获取用户信息失败:', error);\n      message.error(intl.formatMessage({ id: 'pages.account.center.fetchFailed', defaultMessage: '获取用户信息失败' }));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 获取活动日志\n  const fetchActivityLogs = async () => {\n    try {\n      const response = await getUserActivityLogs();\n      if (response.success && response.data) {\n        // 将 UserActivityLog[] 转换为 ActivityLog[] 格式\n        const logs: ActivityLog[] = response.data.map(log => ({\n          id: log.id || '',\n          action: log.action || '',\n          description: log.description || '',\n          ipAddress: log.ipAddress,\n          userAgent: log.userAgent,\n          createdAt: log.createdAt || '',\n        }));\n        setActivityLogs(logs);\n      }\n    } catch (error) {\n      console.error('获取活动日志失败:', error);\n      message.error(intl.formatMessage({ id: 'pages.account.center.activityFailed', defaultMessage: '获取活动日志失败' }));\n    }\n  };\n\n  useEffect(() => {\n    fetchUserProfile();\n    fetchActivityLogs();\n  }, []);\n\n  // 更新用户信息\n  const handleUpdateProfile = async (values: any) => {\n    try {\n      const response = await updateUserProfile(values);\n      if (response.success) {\n        message.success(intl.formatMessage({ id: 'pages.account.center.updateSuccess', defaultMessage: '个人信息更新成功' }));\n        setEditing(false);\n        fetchUserProfile(); // 重新获取用户信息\n      } else {\n        message.error(response.errorMessage || intl.formatMessage({ id: 'pages.account.center.updateFailed', defaultMessage: '更新失败' }));\n      }\n    } catch (error) {\n      console.error('更新用户信息失败:', error);\n      message.error(intl.formatMessage({ id: 'pages.account.center.updateFailed', defaultMessage: '个人信息更新失败' }));\n    }\n  };\n\n  // 取消编辑\n  const handleCancelEdit = () => {\n    setEditing(false);\n    form.resetFields();\n  };\n\n  // 格式化时间\n  const formatDateTime = (dateString: string) => {\n    return new Date(dateString).toLocaleString('zh-CN');\n  };\n\n  // 获取角色标签颜色\n  const getRoleTagColor = (role: string) => {\n    switch (role) {\n      case 'admin':\n        return 'red';\n      case 'user':\n        return 'blue';\n      default:\n        return 'default';\n    }\n  };\n\n  // 获取活动类型标签\n  const getActivityTag = (action: string) => {\n    const actionMap: { [key: string]: { text: string; color: string } } = {\n      login: { text: intl.formatMessage({ id: 'pages.account.center.activity.login', defaultMessage: '登录' }), color: 'green' },\n      logout: { text: intl.formatMessage({ id: 'pages.account.center.activity.logout', defaultMessage: '退出' }), color: 'orange' },\n      update_profile: { text: intl.formatMessage({ id: 'pages.account.center.activity.updateProfile', defaultMessage: '更新资料' }), color: 'blue' },\n      change_password: { text: intl.formatMessage({ id: 'pages.account.center.activity.changePassword', defaultMessage: '修改密码' }), color: 'red' },\n      view_profile: { text: intl.formatMessage({ id: 'pages.account.center.activity.viewProfile', defaultMessage: '查看资料' }), color: 'purple' },\n      // 用户管理操作\n      create_user: { text: '创建用户', color: 'cyan' },\n      update_user: { text: '更新用户', color: 'blue' },\n      delete_user: { text: '删除用户', color: 'red' },\n      activate_user: { text: '启用用户', color: 'green' },\n      deactivate_user: { text: '禁用用户', color: 'orange' },\n      update_user_role: { text: '更新角色', color: 'purple' },\n      bulk_action: { text: '批量操作', color: 'geekblue' },\n    };\n    return actionMap[action] || { text: action, color: 'default' };\n  };\n\n  if (loading) {\n    return <div><FormattedMessage id=\"pages.account.center.loading\" defaultMessage=\"加载中...\" /></div>;\n  }\n\n  if (!userProfile) {\n    return <div><FormattedMessage id=\"pages.account.center.userNotExist\" defaultMessage=\"用户信息不存在\" /></div>;\n  }\n\n  return (\n    <div className={styles.container}>\n      <Helmet>\n        <title>\n          {intl.formatMessage({\n            id: 'menu.account.center',\n            defaultMessage: '个人中心',\n          })}\n          {Settings.title && ` - ${Settings.title}`}\n        </title>\n      </Helmet>\n\n      <Title level={2}>\n        <UserOutlined style={{ marginRight: '8px' }} />\n        <FormattedMessage id=\"pages.account.center.title\" defaultMessage=\"个人中心\" />\n      </Title>\n\n      {/* 个人信息卡片 */}\n      <ProCard\n        title={<FormattedMessage id=\"pages.account.center.profile\" defaultMessage=\"个人信息\" />}\n        className={styles.profileCard}\n        extra={\n          <Button\n            type=\"primary\"\n            icon={<EditOutlined />}\n            onClick={() => setEditing(true)}\n            disabled={editing}\n          >\n            <FormattedMessage id=\"pages.account.center.editProfile\" defaultMessage=\"编辑资料\" />\n          </Button>\n        }\n      >\n        <div className={styles.avatarSection}>\n          <Avatar size={80} icon={<UserOutlined />} />\n          <div style={{ marginTop: '16px' }}>\n            <Title level={4}>{userProfile.name || userProfile.username}</Title>\n            <Tag color={getRoleTagColor(userProfile.role)}>\n              {userProfile.role === 'admin' ? \n                <FormattedMessage id=\"pages.account.center.admin\" defaultMessage=\"管理员\" /> : \n                <FormattedMessage id=\"pages.account.center.user\" defaultMessage=\"普通用户\" />\n              }\n            </Tag>\n          </div>\n        </div>\n\n        <Divider />\n\n        {editing ? (\n          <ProForm\n            form={form}\n            onFinish={handleUpdateProfile}\n            submitter={{\n              searchConfig: {\n                submitText: '保存',\n                resetText: '取消',\n              },\n              render: (props, doms) => {\n                return (\n                  <div style={{ textAlign: 'right' }}>\n                    <Space>\n                      <Button onClick={handleCancelEdit}>取消</Button>\n                      <Button type=\"primary\" htmlType=\"submit\">保存</Button>\n                    </Space>\n                  </div>\n                );\n              },\n              resetButtonProps: {\n                style: { display: 'none' }\n              },\n              submitButtonProps: {\n                style: { display: 'none' }\n              }\n            }}\n          >\n            <ProFormText\n              name=\"username\"\n              label={<FormattedMessage id=\"pages.account.center.username\" defaultMessage=\"用户名\" />}\n              rules={[{ required: true, message: '请输入用户名' }]}\n            />\n            <ProFormText\n              name=\"name\"\n              label={<FormattedMessage id=\"pages.account.center.name\" defaultMessage=\"姓名\" />}\n              placeholder=\"请输入姓名\"\n            />\n            <ProFormText\n              name=\"email\"\n              label={<FormattedMessage id=\"pages.account.center.email\" defaultMessage=\"邮箱\" />}\n              rules={[\n                { type: 'email', message: '请输入有效的邮箱地址' }\n              ]}\n            />\n            <ProFormDigit\n              name=\"age\"\n              label={<FormattedMessage id=\"pages.account.center.age\" defaultMessage=\"年龄\" />}\n              min={1}\n              max={150}\n              placeholder=\"请输入年龄\"\n            />\n          </ProForm>\n        ) : (\n          <Descriptions column={2} bordered>\n            <Descriptions.Item label={<FormattedMessage id=\"pages.account.center.username\" defaultMessage=\"用户名\" />}>\n              <Text strong>{userProfile.username}</Text>\n            </Descriptions.Item>\n            <Descriptions.Item label={<FormattedMessage id=\"pages.account.center.name\" defaultMessage=\"姓名\" />}>\n              {userProfile.name || <FormattedMessage id=\"pages.account.center.notSet\" defaultMessage=\"未设置\" />}\n            </Descriptions.Item>\n            <Descriptions.Item label={<FormattedMessage id=\"pages.account.center.email\" defaultMessage=\"邮箱\" />}>\n              <MailOutlined style={{ marginRight: '4px' }} />\n              {userProfile.email || <FormattedMessage id=\"pages.account.center.notSet\" defaultMessage=\"未设置\" />}\n            </Descriptions.Item>\n            <Descriptions.Item label={<FormattedMessage id=\"pages.account.center.age\" defaultMessage=\"年龄\" />}>\n              {userProfile.age || <FormattedMessage id=\"pages.account.center.notSet\" defaultMessage=\"未设置\" />}\n            </Descriptions.Item>\n            <Descriptions.Item label={<FormattedMessage id=\"pages.account.center.role\" defaultMessage=\"角色\" />}>\n              <Tag color={getRoleTagColor(userProfile.role)}>\n                {userProfile.role === 'admin' ? \n                  <FormattedMessage id=\"pages.account.center.admin\" defaultMessage=\"管理员\" /> : \n                  <FormattedMessage id=\"pages.account.center.user\" defaultMessage=\"普通用户\" />\n                }\n              </Tag>\n            </Descriptions.Item>\n            <Descriptions.Item label={<FormattedMessage id=\"pages.account.center.status\" defaultMessage=\"状态\" />}>\n              <Tag color={userProfile.isActive ? 'green' : 'red'}>\n                {userProfile.isActive ? \n                  <FormattedMessage id=\"pages.account.center.active\" defaultMessage=\"正常\" /> : \n                  <FormattedMessage id=\"pages.account.center.inactive\" defaultMessage=\"禁用\" />\n                }\n              </Tag>\n            </Descriptions.Item>\n            <Descriptions.Item label={<FormattedMessage id=\"pages.account.center.registerTime\" defaultMessage=\"注册时间\" />}>\n              <CalendarOutlined style={{ marginRight: '4px' }} />\n              {formatDateTime(userProfile.createdAt)}\n            </Descriptions.Item>\n            <Descriptions.Item label={<FormattedMessage id=\"pages.account.center.lastUpdate\" defaultMessage=\"最后更新\" />}>\n              <CalendarOutlined style={{ marginRight: '4px' }} />\n              {formatDateTime(userProfile.updatedAt)}\n            </Descriptions.Item>\n            {userProfile.lastLoginAt && (\n              <Descriptions.Item label={<FormattedMessage id=\"pages.account.center.lastLogin\" defaultMessage=\"最后登录\" />} span={2}>\n                <CalendarOutlined style={{ marginRight: '4px' }} />\n                {formatDateTime(userProfile.lastLoginAt)}\n              </Descriptions.Item>\n            )}\n          </Descriptions>\n        )}\n      </ProCard>\n\n      {/* 活动日志卡片 */}\n      <ProCard\n        title={\n          <Space>\n            <HistoryOutlined />\n            <FormattedMessage id=\"pages.account.center.recentActivity\" defaultMessage=\"最近活动\" />\n          </Space>\n        }\n        className={styles.activityCard}\n      >\n        <List\n          dataSource={activityLogs}\n          renderItem={(item) => {\n            const activityTag = getActivityTag(item.action);\n            return (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={<SafetyOutlined />}\n                  title={\n                    <Space>\n                      <Tag color={activityTag.color}>{activityTag.text}</Tag>\n                      <Text>{item.description}</Text>\n                    </Space>\n                  }\n                  description={\n                    <Space direction=\"vertical\" size=\"small\">\n                      <Text type=\"secondary\">\n                        {formatDateTime(item.createdAt)}\n                      </Text>\n                      {item.ipAddress && (\n                        <Text type=\"secondary\" style={{ fontSize: '12px' }}>\n                          IP: {item.ipAddress}\n                        </Text>\n                      )}\n                    </Space>\n                  }\n                />\n              </List.Item>\n            );\n          }}\n        />\n      </ProCard>\n    </div>\n  );\n};\n\nexport default UserCenter;\n",
      "__isJSFile": true,
      "__absFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/pages/account/center/index.tsx"
    },
    "14": {
      "path": "/",
      "redirect": "/welcome",
      "parentId": "ant-design-pro-layout",
      "id": "14",
      "absPath": "/"
    },
    "15": {
      "path": "*",
      "layout": false,
      "file": "@/pages/404.tsx",
      "id": "15",
      "absPath": "/*",
      "__content": "import { history, useIntl } from '@umijs/max';\nimport { Button, Card, Result } from 'antd';\nimport React from 'react';\n\nconst NoFoundPage: React.FC = () => (\n  <Card variant=\"borderless\">\n    <Result\n      status=\"404\"\n      title=\"404\"\n      subTitle={useIntl().formatMessage({ id: 'pages.404.subTitle' })}\n      extra={\n        <Button type=\"primary\" onClick={() => history.push('/')}>\n          {useIntl().formatMessage({ id: 'pages.404.buttonText' })}\n        </Button>\n      }\n    />\n  </Card>\n);\n\nexport default NoFoundPage;\n",
      "__isJSFile": true,
      "__absFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/pages/404.tsx"
    },
    "ant-design-pro-layout": {
      "id": "ant-design-pro-layout",
      "path": "/",
      "file": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/.umi/plugin-layout/Layout.tsx",
      "absPath": "/",
      "isLayout": true,
      "__absFile": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/.umi/plugin-layout/Layout.tsx"
    },
    "umi/plugin/openapi": {
      "path": "/umi/plugin/openapi",
      "absPath": "/umi/plugin/openapi",
      "id": "umi/plugin/openapi",
      "file": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/.umi/plugin-openapi/openapi.tsx"
    }
  },
  "apiRoutes": {},
  "hasSrcDir": true,
  "npmClient": "cnpm",
  "umi": {
    "version": "4.5.1",
    "name": "Umi Max",
    "importSource": "@umijs/max",
    "cliName": "max"
  },
  "bundleStatus": {
    "done": false
  },
  "react": {
    "version": "19.2.0",
    "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/react"
  },
  "react-dom": {
    "version": "19.2.0",
    "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/react-dom"
  },
  "appJS": {
    "path": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/app.tsx",
    "exports": [
      "getInitialState",
      "layout",
      "request"
    ]
  },
  "locale": "C",
  "globalCSS": [
    "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/global.less"
  ],
  "globalJS": [
    "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/global.tsx"
  ],
  "overridesCSS": [],
  "globalLoading": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/src/loading.tsx",
  "bundler": "mako",
  "git": {
    "originUrl": "https://github.com/wjw1-Evan/aspire-admin.git"
  },
  "framework": "react",
  "typescript": {
    "tsVersion": "5.9.3",
    "tslibVersion": "2.8.1"
  },
  "faviconFiles": [],
  "port": 54964,
  "host": "0.0.0.0",
  "ip": "192.168.0.130",
  "antd": {
    "pkgPath": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/antd",
    "version": "5.27.4"
  },
  "pluginLayout": {
    "pkgPath": "/Volumes/thinkplus/Projects/aspire-admin/Platform.Admin/node_modules/@ant-design/pro-components",
    "version": "2.8.10"
  }
}
