{"version":3,"sources":["src/pages/user/login/index.tsx","src/services/ant-design-pro/login.ts"],"sourcesContent":["import {\n  AlipayCircleOutlined,\n  LockOutlined,\n  MobileOutlined,\n  TaobaoCircleOutlined,\n  UserOutlined,\n  WeiboCircleOutlined,\n} from '@ant-design/icons';\nimport {\n  LoginForm,\n  ProFormCaptcha,\n  ProFormCheckbox,\n  ProFormText,\n} from '@ant-design/pro-components';\nimport {\n  FormattedMessage,\n  Helmet,\n  SelectLang,\n  useIntl,\n  useModel,\n} from '@umijs/max';\nimport { Alert, App, Tabs } from 'antd';\nimport { createStyles } from 'antd-style';\nimport React, { useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport { Footer } from '@/components';\nimport { login } from '@/services/ant-design-pro/api';\nimport { getFakeCaptcha } from '@/services/ant-design-pro/login';\nimport Settings from '../../../../config/defaultSettings';\n\nconst useStyles = createStyles(({ token }) => {\n  return {\n    action: {\n      marginLeft: '8px',\n      color: 'rgba(0, 0, 0, 0.2)',\n      fontSize: '24px',\n      verticalAlign: 'middle',\n      cursor: 'pointer',\n      transition: 'color 0.3s',\n      '&:hover': {\n        color: token.colorPrimaryActive,\n      },\n    },\n    lang: {\n      width: 42,\n      height: 42,\n      lineHeight: '42px',\n      position: 'fixed',\n      right: 16,\n      borderRadius: token.borderRadius,\n      ':hover': {\n        backgroundColor: token.colorBgTextHover,\n      },\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      overflow: 'auto',\n      backgroundImage:\n        \"url('https://mdn.alipayobjects.com/yuyan_qk0oxh/afts/img/V-_oS6r-i7wAAAAAAAAAAAAAFl94AQBr')\",\n      backgroundSize: '100% 100%',\n    },\n  };\n});\n\nconst ActionIcons = () => {\n  const { styles } = useStyles();\n\n  return (\n    <>\n      <AlipayCircleOutlined\n        key=\"AlipayCircleOutlined\"\n        className={styles.action}\n      />\n      <TaobaoCircleOutlined\n        key=\"TaobaoCircleOutlined\"\n        className={styles.action}\n      />\n      <WeiboCircleOutlined\n        key=\"WeiboCircleOutlined\"\n        className={styles.action}\n      />\n    </>\n  );\n};\n\nconst Lang = () => {\n  const { styles } = useStyles();\n\n  return (\n    <div className={styles.lang} data-lang>\n      {SelectLang && <SelectLang />}\n    </div>\n  );\n};\n\nconst LoginMessage: React.FC<{\n  content: string;\n}> = ({ content }) => {\n  return (\n    <Alert\n      style={{\n        marginBottom: 24,\n      }}\n      message={content}\n      type=\"error\"\n      showIcon\n    />\n  );\n};\n\nconst Login: React.FC = () => {\n  const [userLoginState, setUserLoginState] = useState<API.LoginResult>({});\n  const [type, setType] = useState<string>('account');\n  const { initialState, setInitialState } = useModel('@@initialState');\n  const { styles } = useStyles();\n  const { message } = App.useApp();\n  const intl = useIntl();\n\n  const fetchUserInfo = async () => {\n    const userInfo = await initialState?.fetchUserInfo?.();\n    if (userInfo) {\n      flushSync(() => {\n        setInitialState((s) => ({\n          ...s,\n          currentUser: userInfo,\n        }));\n      });\n    }\n  };\n\n  const handleSubmit = async (values: API.LoginParams) => {\n    try {\n      // 登录\n      const msg = await login({ ...values, type });\n      if (msg.status === 'ok') {\n        const defaultLoginSuccessMessage = intl.formatMessage({\n          id: 'pages.login.success',\n          defaultMessage: '登录成功！',\n        });\n        message.success(defaultLoginSuccessMessage);\n        await fetchUserInfo();\n        const urlParams = new URL(window.location.href).searchParams;\n        window.location.href = urlParams.get('redirect') || '/';\n        return;\n      }\n      console.log(msg);\n      // 如果失败去设置用户错误信息\n      setUserLoginState(msg);\n    } catch (error) {\n      const defaultLoginFailureMessage = intl.formatMessage({\n        id: 'pages.login.failure',\n        defaultMessage: '登录失败，请重试！',\n      });\n      console.log(error);\n      message.error(defaultLoginFailureMessage);\n    }\n  };\n  const { status, type: loginType } = userLoginState;\n\n  return (\n    <div className={styles.container}>\n      <Helmet>\n        <title>\n          {intl.formatMessage({\n            id: 'menu.login',\n            defaultMessage: '登录页',\n          })}\n          {Settings.title && ` - ${Settings.title}`}\n        </title>\n      </Helmet>\n      <Lang />\n      <div\n        style={{\n          flex: '1',\n          padding: '32px 0',\n        }}\n      >\n        <LoginForm\n          contentStyle={{\n            minWidth: 280,\n            maxWidth: '75vw',\n          }}\n          logo={<img alt=\"logo\" src=\"/logo.svg\" />}\n          title=\"Ant Design\"\n          subTitle={intl.formatMessage({\n            id: 'pages.layouts.userLayout.title',\n          })}\n          initialValues={{\n            autoLogin: true,\n          }}\n          actions={[\n            <FormattedMessage\n              key=\"loginWith\"\n              id=\"pages.login.loginWith\"\n              defaultMessage=\"其他登录方式\"\n            />,\n            <ActionIcons key=\"icons\" />,\n          ]}\n          onFinish={async (values) => {\n            await handleSubmit(values as API.LoginParams);\n          }}\n        >\n          <Tabs\n            activeKey={type}\n            onChange={setType}\n            centered\n            items={[\n              {\n                key: 'account',\n                label: intl.formatMessage({\n                  id: 'pages.login.accountLogin.tab',\n                  defaultMessage: '账户密码登录',\n                }),\n              },\n              {\n                key: 'mobile',\n                label: intl.formatMessage({\n                  id: 'pages.login.phoneLogin.tab',\n                  defaultMessage: '手机号登录',\n                }),\n              },\n            ]}\n          />\n\n          {status === 'error' && loginType === 'account' && (\n            <LoginMessage\n              content={intl.formatMessage({\n                id: 'pages.login.accountLogin.errorMessage',\n                defaultMessage: '账户或密码错误(admin/ant.design)',\n              })}\n            />\n          )}\n          {type === 'account' && (\n            <>\n              <ProFormText\n                name=\"username\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <UserOutlined />,\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.username.placeholder',\n                  defaultMessage: '用户名: admin or user',\n                })}\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.username.required\"\n                        defaultMessage=\"请输入用户名!\"\n                      />\n                    ),\n                  },\n                ]}\n              />\n              <ProFormText.Password\n                name=\"password\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <LockOutlined />,\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.password.placeholder',\n                  defaultMessage: '密码: ant.design',\n                })}\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.password.required\"\n                        defaultMessage=\"请输入密码！\"\n                      />\n                    ),\n                  },\n                ]}\n              />\n            </>\n          )}\n\n          {status === 'error' && loginType === 'mobile' && (\n            <LoginMessage content=\"验证码错误\" />\n          )}\n          {type === 'mobile' && (\n            <>\n              <ProFormText\n                fieldProps={{\n                  size: 'large',\n                  prefix: <MobileOutlined />,\n                }}\n                name=\"mobile\"\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.phoneNumber.placeholder',\n                  defaultMessage: '手机号',\n                })}\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.phoneNumber.required\"\n                        defaultMessage=\"请输入手机号！\"\n                      />\n                    ),\n                  },\n                  {\n                    pattern: /^1\\d{10}$/,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.phoneNumber.invalid\"\n                        defaultMessage=\"手机号格式错误！\"\n                      />\n                    ),\n                  },\n                ]}\n              />\n              <ProFormCaptcha\n                fieldProps={{\n                  size: 'large',\n                  prefix: <LockOutlined />,\n                }}\n                captchaProps={{\n                  size: 'large',\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.captcha.placeholder',\n                  defaultMessage: '请输入验证码',\n                })}\n                captchaTextRender={(timing, count) => {\n                  if (timing) {\n                    return `${count} ${intl.formatMessage({\n                      id: 'pages.getCaptchaSecondText',\n                      defaultMessage: '获取验证码',\n                    })}`;\n                  }\n                  return intl.formatMessage({\n                    id: 'pages.login.phoneLogin.getVerificationCode',\n                    defaultMessage: '获取验证码',\n                  });\n                }}\n                name=\"captcha\"\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.captcha.required\"\n                        defaultMessage=\"请输入验证码！\"\n                      />\n                    ),\n                  },\n                ]}\n                onGetCaptcha={async (phone) => {\n                  const result = await getFakeCaptcha({\n                    phone,\n                  });\n                  if (!result) {\n                    return;\n                  }\n                  message.success('获取验证码成功！验证码为：1234');\n                }}\n              />\n            </>\n          )}\n          <div\n            style={{\n              marginBottom: 24,\n            }}\n          >\n            <ProFormCheckbox noStyle name=\"autoLogin\">\n              <FormattedMessage\n                id=\"pages.login.rememberMe\"\n                defaultMessage=\"自动登录\"\n              />\n            </ProFormCheckbox>\n            <a\n              style={{\n                float: 'right',\n              }}\n            >\n              <FormattedMessage\n                id=\"pages.login.forgotPassword\"\n                defaultMessage=\"忘记密码\"\n              />\n            </a>\n          </div>\n        </LoginForm>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Login;\n","// @ts-ignore\n/* eslint-disable */\nimport { request } from '@umijs/max';\n\n/** 发送验证码 POST /api/login/captcha */\nexport async function getFakeCaptcha(\n  params: {\n    // query\n    /** 手机号 */\n    phone?: string;\n  },\n  options?: { [key: string]: any },\n) {\n  return request<API.FakeCaptcha>('/api/login/captcha', {\n    method: 'GET',\n    params: {\n      ...params,\n    },\n    ...(options || {}),\n  });\n}\n"],"names":[],"mappings":"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"}