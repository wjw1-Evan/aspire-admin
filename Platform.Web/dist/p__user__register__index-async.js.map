{"version":3,"sources":["src/pages/user/register/index.tsx"],"sourcesContent":["import {\n  AlipayCircleOutlined,\n  LockOutlined,\n  MailOutlined,\n  TaobaoCircleOutlined,\n  UserOutlined,\n  WeiboCircleOutlined,\n} from '@ant-design/icons';\nimport {\n  LoginForm,\n  ProFormText,\n} from '@ant-design/pro-components';\nimport {\n  FormattedMessage,\n  Helmet,\n  SelectLang,\n  useIntl,\n  history,\n  Link,\n} from '@umijs/max';\nimport { Alert, App } from 'antd';\nimport { createStyles } from 'antd-style';\nimport React, { useState } from 'react';\nimport { Footer } from '@/components';\nimport { register } from '@/services/ant-design-pro/api';\nimport Settings from '../../../../config/defaultSettings';\n\nconst useStyles = createStyles(({ token }) => {\n  return {\n    action: {\n      marginLeft: '8px',\n      color: 'rgba(0, 0, 0, 0.2)',\n      fontSize: '24px',\n      verticalAlign: 'middle',\n      cursor: 'pointer',\n      transition: 'color 0.3s',\n      '&:hover': {\n        color: token.colorPrimaryActive,\n      },\n    },\n    lang: {\n      width: 42,\n      height: 42,\n      lineHeight: '42px',\n      position: 'fixed',\n      right: 16,\n      borderRadius: token.borderRadius,\n      ':hover': {\n        backgroundColor: token.colorBgTextHover,\n      },\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      overflow: 'auto',\n      backgroundImage:\n        \"url('https://mdn.alipayobjects.com/yuyan_qk0oxh/afts/img/V-_oS6r-i7wAAAAAAAAAAAAAFl94AQBr')\",\n      backgroundSize: '100% 100%',\n    },\n  };\n});\n\nconst ActionIcons = () => {\n  const { styles } = useStyles();\n\n  return (\n    <>\n      <AlipayCircleOutlined\n        key=\"AlipayCircleOutlined\"\n        className={styles.action}\n      />\n      <TaobaoCircleOutlined\n        key=\"TaobaoCircleOutlined\"\n        className={styles.action}\n      />\n      <WeiboCircleOutlined\n        key=\"WeiboCircleOutlined\"\n        className={styles.action}\n      />\n    </>\n  );\n};\n\nconst Lang = () => {\n  const { styles } = useStyles();\n\n  return (\n    <div className={styles.lang} data-lang>\n      {SelectLang && <SelectLang />}\n    </div>\n  );\n};\n\nconst RegisterMessage: React.FC<{\n  content: string;\n}> = ({ content }) => {\n  return (\n    <Alert\n      style={{\n        marginBottom: 24,\n      }}\n      message={content}\n      type=\"error\"\n      showIcon\n    />\n  );\n};\n\nconst Register: React.FC = () => {\n  const [registerState, setRegisterState] = useState<API.RegisterResult>({});\n  const { styles } = useStyles();\n  const { message } = App.useApp();\n  const intl = useIntl();\n\n  const handleSubmit = async (values: API.RegisterParams) => {\n    try {\n      // 注册\n      const result = await register(values);\n      if (result.success) {\n        const defaultRegisterSuccessMessage = intl.formatMessage({\n          id: 'pages.register.success',\n          defaultMessage: '注册成功！',\n        });\n        message.success(defaultRegisterSuccessMessage);\n        \n        // 注册成功后跳转到注册结果页面\n        history.push('/user/register-result');\n        return;\n      }\n      \n      // 如果失败去设置用户错误信息\n      setRegisterState(result);\n    } catch (error) {\n      const defaultRegisterFailureMessage = intl.formatMessage({\n        id: 'pages.register.failure',\n        defaultMessage: '注册失败，请重试！',\n      });\n      console.log(error);\n      message.error(defaultRegisterFailureMessage);\n    }\n  };\n\n  const { errorCode, errorMessage } = registerState;\n\n  return (\n    <div className={styles.container}>\n      <Helmet>\n        <title>\n          {intl.formatMessage({\n            id: 'menu.register',\n            defaultMessage: '注册页',\n          })}\n          {Settings.title && ` - ${Settings.title}`}\n        </title>\n      </Helmet>\n      <Lang />\n      <div\n        style={{\n          flex: '1',\n          padding: '32px 0',\n        }}\n      >\n        <LoginForm\n          contentStyle={{\n            minWidth: 280,\n            maxWidth: '75vw',\n          }}\n          logo={<img alt=\"logo\" src=\"/logo.svg\" />}\n          title=\"Ant Design\"\n          subTitle={intl.formatMessage({\n            id: 'pages.layouts.userLayout.title',\n          })}\n          actions={[\n            <FormattedMessage\n              key=\"registerWith\"\n              id=\"pages.register.registerWith\"\n              defaultMessage=\"其他注册方式\"\n            />,\n            <ActionIcons key=\"icons\" />,\n          ]}\n          onFinish={async (values) => {\n            await handleSubmit(values as API.RegisterParams);\n          }}\n          submitter={{\n            searchConfig: {\n              submitText: intl.formatMessage({\n                id: 'pages.register.submit',\n                defaultMessage: '注册',\n              }),\n            },\n          }}\n        >\n          {errorCode && (\n            <RegisterMessage content={errorMessage || '注册失败'} />\n          )}\n\n          <ProFormText\n            name=\"username\"\n            fieldProps={{\n              size: 'large',\n              prefix: <UserOutlined />,\n            }}\n            placeholder={intl.formatMessage({\n              id: 'pages.register.username.placeholder',\n              defaultMessage: '用户名',\n            })}\n            rules={[\n              {\n                required: true,\n                message: (\n                  <FormattedMessage\n                    id=\"pages.register.username.required\"\n                    defaultMessage=\"请输入用户名!\"\n                  />\n                ),\n              },\n              {\n                min: 3,\n                max: 20,\n                message: (\n                  <FormattedMessage\n                    id=\"pages.register.username.length\"\n                    defaultMessage=\"用户名长度必须在3-20个字符之间\"\n                  />\n                ),\n              },\n            ]}\n          />\n\n          <ProFormText.Password\n            name=\"password\"\n            fieldProps={{\n              size: 'large',\n              prefix: <LockOutlined />,\n            }}\n            placeholder={intl.formatMessage({\n              id: 'pages.register.password.placeholder',\n              defaultMessage: '密码',\n            })}\n            rules={[\n              {\n                required: true,\n                message: (\n                  <FormattedMessage\n                    id=\"pages.register.password.required\"\n                    defaultMessage=\"请输入密码！\"\n                  />\n                ),\n              },\n              {\n                min: 6,\n                message: (\n                  <FormattedMessage\n                    id=\"pages.register.password.length\"\n                    defaultMessage=\"密码长度至少6个字符\"\n                  />\n                ),\n              },\n            ]}\n          />\n\n          <ProFormText\n            name=\"email\"\n            fieldProps={{\n              size: 'large',\n              prefix: <MailOutlined />,\n            }}\n            placeholder={intl.formatMessage({\n              id: 'pages.register.email.placeholder',\n              defaultMessage: '邮箱（可选）',\n            })}\n            rules={[\n              {\n                type: 'email',\n                message: (\n                  <FormattedMessage\n                    id=\"pages.register.email.invalid\"\n                    defaultMessage=\"邮箱格式不正确！\"\n                  />\n                ),\n              },\n            ]}\n          />\n\n          <div\n            style={{\n              marginBottom: 24,\n              textAlign: 'center',\n            }}\n          >\n            <Link to=\"/user/login\">\n              <FormattedMessage\n                id=\"pages.register.backToLogin\"\n                defaultMessage=\"已有账号？立即登录\"\n              />\n            </Link>\n          </div>\n        </LoginForm>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":[],"mappings":"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"}